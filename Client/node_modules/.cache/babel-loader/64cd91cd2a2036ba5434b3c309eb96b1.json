{"ast":null,"code":"import _defineProperty from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\src\\\\components\\\\home\\\\WriteComment.js\";\nimport React, { Fragment, Component } from 'react';\nimport { userService } from '../../infrastructure';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nvar WriteComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WriteComment, _Component);\n\n  function WriteComment(props) {\n    var _this;\n\n    _classCallCheck(this, WriteComment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WriteComment).call(this, props));\n\n    _this.handleBlur = function (field) {\n      return function (event) {\n        _this.setState({\n          touched: _objectSpread({}, _this.state.touched, _defineProperty({}, field, true))\n        });\n      };\n    };\n\n    _this.validate = function (content) {\n      return {\n        content: content.length === 0\n      };\n    };\n\n    _this.state = {\n      content: '',\n      imageUrl: '',\n      createCommentData: '',\n      touched: {\n        content: false\n      }\n    };\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeHandler = _this.onChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitHandler = _this.onSubmitHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(WriteComment, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var loading = this.props.createCommentData.loading || this.props.loadingAllPosts;\n\n      if (!loading && this.state.createCommentData !== this.props.createCommentData) {\n        this.setState({\n          content: '',\n          imageUrl: '',\n          createCommentData: this.props.createCommentData\n        });\n      }\n    }\n  }, {\n    key: \"onSubmitHandler\",\n    value: function onSubmitHandler(event) {\n      event.preventDefault();\n\n      if (!this.canBeSubmitted()) {\n        return;\n      }\n\n      var postId = this.props.postId;\n      var _this$state = this.state,\n          content = _this$state.content,\n          imageUrl = _this$state.imageUrl;\n      this.props.createComment(postId, content, imageUrl);\n    }\n  }, {\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"canBeSubmitted\",\n    value: function canBeSubmitted() {\n      var content = this.state.content;\n      var errors = this.validate(content);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      return !isDisabled;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var content = this.state.content;\n      var errors = this.validate(content);\n      var isEnabled = !Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var displayButon = isEnabled ? '' : 'hidden';\n      var loggedInUserProfilePicUrl = this.props.loggedInUser.profilePicUrl;\n      var imageClass = userService.getImageSize(loggedInUserProfilePicUrl);\n      var loggedInUserFirstName = this.props.loggedInUser.firstName;\n      var formattedName = userService.formatUsername(loggedInUserFirstName);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"comment-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"write-comment\",\n        id: \"create-comment-button-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: imageClass,\n        src: loggedInUserProfilePicUrl,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"post-area-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"\",\n        onSubmit: this.onSubmitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        id: \"post-textarea-form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(TextareaAutosize, {\n        name: \"content\",\n        id: \"content\",\n        className: \"post-textarea\",\n        value: this.state.content,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('content'),\n        \"aria-describedby\": \"contentHelp\",\n        placeholder: \"Write a comment, \".concat(formattedName, \"!\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: !isEnabled,\n        style: {\n          'visibility': \"\".concat(displayButon)\n        },\n        type: \"submit\",\n        className: \"btn uiButtonGroup post-button-fbPhotoCurationControl App-button-primary \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"POST\"))))))));\n    }\n  }]);\n\n  return WriteComment;\n}(Component);\n\nexport { WriteComment as default };","map":{"version":3,"sources":["G:\\WORKSPACE\\Project\\Besocial\\Besocial\\Client\\src\\components\\home\\WriteComment.js"],"names":["React","Fragment","Component","userService","TextareaAutosize","WriteComment","props","handleBlur","field","event","setState","touched","state","validate","content","length","imageUrl","createCommentData","bind","onChangeHandler","onSubmitHandler","prevProps","prevState","loading","loadingAllPosts","preventDefault","canBeSubmitted","postId","createComment","target","name","value","errors","isDisabled","Object","keys","some","x","isEnabled","displayButon","loggedInUserProfilePicUrl","loggedInUser","profilePicUrl","imageClass","getImageSize","loggedInUserFirstName","firstName","formattedName","formatUsername"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { userService} from '../../infrastructure';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nexport default class WriteComment extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            content: '',\n            imageUrl: '',\n            createCommentData: '',\n            touched: {\n                content: false,\n            }\n        };\n\n        this.handleBlur = this.handleBlur.bind(this);\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const loading = this.props.createCommentData.loading || this.props.loadingAllPosts;\n\n        if (!loading && this.state.createCommentData !== this.props.createCommentData) {\n            this.setState({\n                content: '',\n                imageUrl: '',\n                createCommentData: this.props.createCommentData,\n            })\n        }\n    }\n\n    onSubmitHandler(event) {\n        event.preventDefault();\n\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n        const postId = this.props.postId;\n        const { content, imageUrl } = this.state;\n\n        this.props.createComment(postId, content, imageUrl )\n    }\n\n    onChangeHandler(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleBlur = (field) => (event) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n    }\n\n    canBeSubmitted() {\n        const { content } = this.state;\n        const errors = this.validate(content);\n        const isDisabled = Object.keys(errors).some(x => errors[x])\n        return !isDisabled;\n    }\n\n    validate = (content) => {\n        return {\n            content: content.length === 0,\n        }\n    }\n\n    render() {\n        const { content } = this.state;\n        const errors = this.validate(content);\n        const isEnabled = !Object.keys(errors).some(x => errors[x]);\n        const displayButon = isEnabled ? '' : 'hidden';\n\n        const loggedInUserProfilePicUrl = this.props.loggedInUser.profilePicUrl;\n        const imageClass = userService.getImageSize(loggedInUserProfilePicUrl);\n        const loggedInUserFirstName = this.props.loggedInUser.firstName;\n        const formattedName = userService.formatUsername(loggedInUserFirstName);\n\n        return (\n            <Fragment>\n                <section className=\"comment-section\">\n                    <div className=\"write-comment\" id=\"create-comment-button-container\">\n                        <div className=\"post\">\n                            <div className=\"post-image\">\n                                <img className={imageClass} src={loggedInUserProfilePicUrl} alt=\"\" />\n                            </div>\n                            <div className=\"post-area-container\">\n                                <form className=\"\" onSubmit={this.onSubmitHandler}>\n                                    <div className=\"\" id=\"post-textarea-form-group\">\n                                        <TextareaAutosize\n                                            name=\"content\"\n                                            id=\"content\"\n                                            className=\"post-textarea\"\n                                            value={this.state.content}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('content')}\n                                            aria-describedby=\"contentHelp\"\n                                            placeholder={`Write a comment, ${formattedName}!`}\n                                        >\n                                        </TextareaAutosize>\n                                    </div>\n\n                                    <div className=\"text-center\">\n                                        <button disabled={!isEnabled} style={{ 'visibility': `${displayButon}` }} type=\"submit\" className=\"btn uiButtonGroup post-button-fbPhotoCurationControl App-button-primary \">POST</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}