{"ast":null,"code":"import _toConsumableArray from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { FETCH_ALLPOSTS_BEGIN, FETCH_ALLPOSTS_SUCCESS, FETCH_ALLPOSTS_ERROR, REMOVE_POST_BEGIN, REMOVE_POST_SUCCESS, REMOVE_POST_ERROR, ADDLIKE_POST_SUCCESS, ADDLIKE_POST_BEGIN, ADDLIKE_POST_ERROR, CREATE_POST_SUCCESS, CREATE_POST_BEGIN, CREATE_POST_ERROR } from '../actions/actionTypes'; // createPostReducer\n\nvar initialStateCreatePost = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\n\nvar createPostReducer = function createPostReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateCreatePost;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CREATE_POST_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n\n    case CREATE_POST_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n\n    case CREATE_POST_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}; // fetchAllPostsReducer\n\n\nvar initialStateAllPosts = {\n  allPostsArr: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\n\nvar fetchAllPostsReducer = function fetchAllPostsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAllPosts;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALLPOSTS_BEGIN:\n      return Object.assign({}, state, {\n        allPostsArr: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n\n    case FETCH_ALLPOSTS_SUCCESS:\n      return Object.assign({}, state, {\n        allPostsArr: _toConsumableArray(action.payload),\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n\n    case FETCH_ALLPOSTS_ERROR:\n      return Object.assign({}, state, {\n        allPostsArr: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar initialStateRemovePost = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false // removePostReducer\n\n};\n\nvar removePostReducer = function removePostReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateRemovePost;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REMOVE_POST_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n\n    case REMOVE_POST_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n\n    case REMOVE_POST_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar initialStateAddLikePost = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false // addLikePostReducer\n\n};\n\nvar addLikePostReducer = function addLikePostReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAddLikePost;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADDLIKE_POST_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n\n    case ADDLIKE_POST_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n\n    case ADDLIKE_POST_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport { createPostReducer, fetchAllPostsReducer, removePostReducer, addLikePostReducer };","map":{"version":3,"sources":["G:\\WORKSPACE\\Project\\Besocial\\Besocial\\Client\\src\\store\\reducers\\postReducer.js"],"names":["FETCH_ALLPOSTS_BEGIN","FETCH_ALLPOSTS_SUCCESS","FETCH_ALLPOSTS_ERROR","REMOVE_POST_BEGIN","REMOVE_POST_SUCCESS","REMOVE_POST_ERROR","ADDLIKE_POST_SUCCESS","ADDLIKE_POST_BEGIN","ADDLIKE_POST_ERROR","CREATE_POST_SUCCESS","CREATE_POST_BEGIN","CREATE_POST_ERROR","initialStateCreatePost","hasError","error","message","status","path","loading","createPostReducer","state","action","type","Object","assign","payload","initialStateAllPosts","allPostsArr","fetchAllPostsReducer","initialStateRemovePost","removePostReducer","initialStateAddLikePost","addLikePostReducer"],"mappings":"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","sourcesContent":["import {\n    FETCH_ALLPOSTS_BEGIN, FETCH_ALLPOSTS_SUCCESS, FETCH_ALLPOSTS_ERROR,\n    REMOVE_POST_BEGIN, REMOVE_POST_SUCCESS, REMOVE_POST_ERROR,\n    ADDLIKE_POST_SUCCESS, ADDLIKE_POST_BEGIN, ADDLIKE_POST_ERROR,\n    CREATE_POST_SUCCESS, CREATE_POST_BEGIN, CREATE_POST_ERROR\n} from '../actions/actionTypes';\n\n// createPostReducer\nconst initialStateCreatePost = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst createPostReducer = (state = initialStateCreatePost, action) => {\n    switch (action.type) {\n        case CREATE_POST_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CREATE_POST_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CREATE_POST_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// fetchAllPostsReducer\nconst initialStateAllPosts = {\n    allPostsArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nconst fetchAllPostsReducer = (state = initialStateAllPosts, action) => {\n    switch (action.type) {\n        case FETCH_ALLPOSTS_BEGIN:\n            return Object.assign({}, state, {\n                allPostsArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_ALLPOSTS_SUCCESS:\n            return Object.assign({}, state, {\n                allPostsArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_ALLPOSTS_ERROR:\n            return Object.assign({}, state, {\n                allPostsArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nconst initialStateRemovePost = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\n// removePostReducer\nconst removePostReducer = (state = initialStateRemovePost, action) => {\n    switch (action.type) {\n        case REMOVE_POST_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case REMOVE_POST_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case REMOVE_POST_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nconst initialStateAddLikePost = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\n// addLikePostReducer\nconst addLikePostReducer = (state = initialStateAddLikePost, action) => {\n    switch (action.type) {\n        case ADDLIKE_POST_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case ADDLIKE_POST_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case ADDLIKE_POST_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nexport { createPostReducer, fetchAllPostsReducer, removePostReducer, addLikePostReducer }"]},"metadata":{},"sourceType":"module"}