{"ast":null,"code":"import _classCallCheck from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\src\\\\components\\\\user\\\\UserFindFriendsPage.js\";\nimport React, { Component, Fragment } from 'react';\nimport { userService } from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport Friend from './Friend';\nimport FriendRequest from './FriendRequest';\nimport './css/UserFriends.css';\nimport { connect } from 'react-redux';\nimport { changeCurrentTimeLineUserAction, changeAllFriendsAction, findFriendsAction, addFriendAction, cancelRequestAction, confirmRequestAction } from '../../store/actions/userActions';\nimport { changeAllPicturesAction } from '../../store/actions/pictureActions';\n\nvar UserFindFriendsPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserFindFriendsPage, _Component);\n\n  function UserFindFriendsPage(props) {\n    var _this;\n\n    _classCallCheck(this, UserFindFriendsPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserFindFriendsPage).call(this, props));\n\n    _this.addFriend = function (friendCandidateId) {\n      var loggedInUserId = _this.props.loggedInUserData.id;\n\n      _this.props.addFriend(loggedInUserId, friendCandidateId);\n    };\n\n    _this.confirmRequest = function (friendToAcceptId) {\n      var loggedInUserId = _this.props.loggedInUserData.id;\n\n      _this.props.acceptRequest(loggedInUserId, friendToAcceptId);\n    };\n\n    _this.rejectRequest = function (friendToRejectId) {\n      var loggedInUserId = _this.props.loggedInUserData.id;\n\n      _this.props.cancelRequest(loggedInUserId, friendToRejectId);\n    };\n\n    _this.state = {\n      friendsCandidatesArr: [],\n      userWaitingForAcceptingRequest: [],\n      usersReceivedRequestFromCurrentUser: [],\n      ready: false\n    };\n    _this.addFriend = _this.addFriend.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.confirmRequest = _this.confirmRequest.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.rejectRequest = _this.rejectRequest.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserFindFriendsPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var loggedInUserId = userService.getUserId();\n\n      if (loggedInUserId !== this.props.timeLineUserData.id) {\n        this.props.changeTimeLineUser(loggedInUserId);\n        this.props.changeAllPictures(loggedInUserId);\n        this.props.changeAllFriends(loggedInUserId);\n      }\n\n      this.props.findFriends(loggedInUserId);\n      this.setState({\n        ready: true\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var errorMessage = this.getErrorMessage(prevProps);\n      var successMessage = this.getSuccessMessage(prevProps);\n\n      if (errorMessage) {\n        toast.error(React.createElement(ToastComponent.errorToast, {\n          text: errorMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else if (successMessage) {\n        toast.success(React.createElement(ToastComponent.successToast, {\n          text: successMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    }\n  }, {\n    key: \"getSuccessMessage\",\n    value: function getSuccessMessage(prevProps) {\n      if (!this.props.findFriendsData.hasError && this.props.findFriendsData.message && this.props.findFriendsData !== prevProps.findFriendsData) {\n        return this.props.findFriendsData.message;\n      } else if (!this.props.addfriendData.hasError && this.props.addfriendData.message && this.props.addfriendData !== prevProps.addfriendData) {\n        return this.props.addfriendData.message;\n      } else if (!this.props.cancelRequestData.hasError && this.props.cancelRequestData.message && this.props.cancelRequestData !== prevProps.cancelRequestData) {\n        return this.props.cancelRequestData.message;\n      } else if (!this.props.confirmRequestData.hasError && this.props.confirmRequestData.message && this.props.confirmRequestData !== prevProps.confirmRequestData) {\n        return this.props.confirmRequestData.message;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getErrorMessage\",\n    value: function getErrorMessage(prevProps) {\n      if (this.props.findFriendsData.hasError && prevProps.findFriendsData.error !== this.props.findFriendsData.error) {\n        return this.props.findFriendsData.message || 'Server Error';\n      } else if (this.props.addfriendData.hasError && prevProps.addfriendData.error !== this.props.addfriendData.error) {\n        return this.props.addfriendData.message || 'Server Error';\n      } else if (this.props.cancelRequestData.hasError && prevProps.cancelRequestData.error !== this.props.cancelRequestData.error) {\n        return this.props.cancelRequestData.message || 'Server Error';\n      } else if (this.props.confirmRequestData.hasError && prevProps.confirmRequestData.error !== this.props.confirmRequestData.error) {\n        return this.props.confirmRequestData.message || 'Server Error';\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var requestLength = this.props.userWaitingForAcceptingRequest.length;\n      var requests = '';\n\n      if (requestLength > 0) {\n        requests = React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"mt-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Respond to Your Friend Requests\"), React.createElement(\"div\", {\n          className: \"hr-styles\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), this.props.userWaitingForAcceptingRequest.map(function (friend) {\n          return React.createElement(FriendRequest, Object.assign({\n            key: friend.id\n          }, _this2.props, friend, {\n            firstButtonText: 'CONFIRM',\n            secondButtonText: 'REJECT',\n            thirdButtonText: 'VIEW PROFILE',\n            firstButtonOnClick: _this2.confirmRequest,\n            secondButtonOnClick: _this2.rejectRequest,\n            thirdButtonLink: \"/home/profile/\".concat(friend.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }));\n        }));\n      }\n\n      var waitingForResponseUsers = this.props.usersReceivedRequestFromCurrentUser.length;\n      var friendsCandidates = '';\n\n      if (waitingForResponseUsers > 0) {\n        friendsCandidates = React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"mt-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Pending Requests\"), React.createElement(\"div\", {\n          className: \"hr-styles\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), this.props.usersReceivedRequestFromCurrentUser.map(function (friend) {\n          return React.createElement(Friend, Object.assign({\n            key: friend.id\n          }, _this2.props, friend, {\n            firstButtonLink: \"/home/profile/\".concat(friend.id),\n            secondButtonLink: \"/\",\n            firstButtonText: 'VIEW PROFILE',\n            secondButtonText: 'CANCEL REQUEST',\n            secondButtonOnClick: _this2.rejectRequest,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }));\n        }));\n      }\n\n      var friendsCandidatesArr = this.props.friendsCandidatesArr.length;\n      var remainCandidates = '';\n\n      if (friendsCandidatesArr > 0) {\n        remainCandidates = React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"mt-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"People You May Know\"), React.createElement(\"div\", {\n          className: \"hr-styles\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }), this.props.friendsCandidatesArr.map(function (friend) {\n          return React.createElement(Friend, Object.assign({\n            key: friend.id\n          }, _this2.props, friend, {\n            firstButtonLink: \"/home/profile/\".concat(friend.id),\n            secondButtonLink: \"/\",\n            firstButtonText: 'VIEW PROFILE',\n            secondButtonText: 'ADD FRIEND',\n            secondButtonOnClick: _this2.addFriend,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }));\n        }));\n      }\n\n      var noResult = '';\n\n      if (!requests && !friendsCandidates && !remainCandidates) {\n        noResult = React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"All registered users are already your friends!\"), React.createElement(\"div\", {\n          className: \"hr-styles\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"article\", {\n        className: \"main-article-shared-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"friend-content-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container col-md-12 text-center mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center font-weight-bold mt-4\",\n        style: {\n          'margin': '1rem auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Find Friends\"), React.createElement(\"div\", {\n        className: \"hr-styles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"friend-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, requests, friendsCandidates, remainCandidates, noResult)))));\n    }\n  }]);\n\n  return UserFindFriendsPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    timeLineUserData: state.timeLineUserData,\n    loggedInUserData: state.loggedInUserData,\n    findFriendsData: state.findFriends,\n    friendsCandidatesArr: state.findFriends.friendsCandidatesArr,\n    userWaitingForAcceptingRequest: state.findFriends.userWaitingForAcceptingRequest,\n    usersReceivedRequestFromCurrentUser: state.findFriends.usersReceivedRequestFromCurrentUser,\n    addfriendData: state.addfriend,\n    cancelRequestData: state.cancelRequest,\n    confirmRequestData: state.confirmRequest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeTimeLineUser: function changeTimeLineUser(userId) {\n      dispatch(changeCurrentTimeLineUserAction(userId));\n    },\n    changeAllFriends: function changeAllFriends(userId) {\n      dispatch(changeAllFriendsAction(userId));\n    },\n    changeAllPictures: function changeAllPictures(userId) {\n      dispatch(changeAllPicturesAction(userId));\n    },\n    findFriends: function findFriends(userId) {\n      dispatch(findFriendsAction(userId));\n    },\n    addFriend: function addFriend(loggedInUserId, friendCandidateId) {\n      dispatch(addFriendAction(loggedInUserId, friendCandidateId));\n    },\n    cancelRequest: function cancelRequest(loggedInUserId, friendToRejectId) {\n      dispatch(cancelRequestAction(loggedInUserId, friendToRejectId));\n    },\n    acceptRequest: function acceptRequest(loggedInUserId, friendToAcceptId) {\n      dispatch(confirmRequestAction(loggedInUserId, friendToAcceptId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserFindFriendsPage);","map":{"version":3,"sources":["G:\\WORKSPACE\\Project\\Besocial\\Besocial\\Client\\src\\components\\user\\UserFindFriendsPage.js"],"names":["React","Component","Fragment","userService","toast","ToastComponent","Friend","FriendRequest","connect","changeCurrentTimeLineUserAction","changeAllFriendsAction","findFriendsAction","addFriendAction","cancelRequestAction","confirmRequestAction","changeAllPicturesAction","UserFindFriendsPage","props","addFriend","friendCandidateId","loggedInUserId","loggedInUserData","id","confirmRequest","friendToAcceptId","acceptRequest","rejectRequest","friendToRejectId","cancelRequest","state","friendsCandidatesArr","userWaitingForAcceptingRequest","usersReceivedRequestFromCurrentUser","ready","bind","getUserId","timeLineUserData","changeTimeLineUser","changeAllPictures","changeAllFriends","findFriends","setState","prevProps","prevState","errorMessage","getErrorMessage","successMessage","getSuccessMessage","error","position","POSITION","TOP_RIGHT","success","findFriendsData","hasError","message","addfriendData","cancelRequestData","confirmRequestData","requestLength","length","requests","map","friend","waitingForResponseUsers","friendsCandidates","remainCandidates","noResult","mapStateToProps","addfriend","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {userService} from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common'\nimport Friend from './Friend';\nimport FriendRequest from './FriendRequest';\nimport './css/UserFriends.css';\n\nimport { connect } from 'react-redux';\nimport {\n    changeCurrentTimeLineUserAction, changeAllFriendsAction, findFriendsAction,\n    addFriendAction, cancelRequestAction, confirmRequestAction\n} from '../../store/actions/userActions';\nimport { changeAllPicturesAction } from '../../store/actions/pictureActions';\n\nclass UserFindFriendsPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            friendsCandidatesArr: [],\n            userWaitingForAcceptingRequest: [],\n            usersReceivedRequestFromCurrentUser: [],\n            ready: false,\n        };\n\n        this.addFriend = this.addFriend.bind(this);\n        this.confirmRequest = this.confirmRequest.bind(this);\n        this.rejectRequest = this.rejectRequest.bind(this);\n    }\n\n    componentDidMount() {\n        const loggedInUserId = userService.getUserId();\n        if (loggedInUserId !== this.props.timeLineUserData.id) {\n            this.props.changeTimeLineUser(loggedInUserId);\n            this.props.changeAllPictures(loggedInUserId);\n            this.props.changeAllFriends(loggedInUserId);\n        }\n\n        this.props.findFriends(loggedInUserId);\n        this.setState({ ready: true });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const errorMessage = this.getErrorMessage(prevProps);\n        const successMessage = this.getSuccessMessage(prevProps)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    getSuccessMessage(prevProps) {\n        if (!this.props.findFriendsData.hasError && this.props.findFriendsData.message && this.props.findFriendsData !== prevProps.findFriendsData) {\n            return this.props.findFriendsData.message;\n        }\n        else if (!this.props.addfriendData.hasError && this.props.addfriendData.message && this.props.addfriendData !== prevProps.addfriendData) {\n            return this.props.addfriendData.message;\n        }\n        else if (!this.props.cancelRequestData.hasError && this.props.cancelRequestData.message && this.props.cancelRequestData !== prevProps.cancelRequestData) {\n            return this.props.cancelRequestData.message;\n        }\n        else if (!this.props.confirmRequestData.hasError && this.props.confirmRequestData.message && this.props.confirmRequestData !== prevProps.confirmRequestData) {\n            return this.props.confirmRequestData.message;\n        }\n\n        return null;\n    }\n\n    getErrorMessage(prevProps) {\n        if (this.props.findFriendsData.hasError && prevProps.findFriendsData.error !== this.props.findFriendsData.error) {\n            return this.props.findFriendsData.message || 'Server Error';\n        }\n        else if (this.props.addfriendData.hasError && prevProps.addfriendData.error !== this.props.addfriendData.error) {\n            return this.props.addfriendData.message || 'Server Error';\n        }\n        else if (this.props.cancelRequestData.hasError && prevProps.cancelRequestData.error !== this.props.cancelRequestData.error) {\n            return this.props.cancelRequestData.message || 'Server Error';\n        }\n        else if (this.props.confirmRequestData.hasError && prevProps.confirmRequestData.error !== this.props.confirmRequestData.error) {\n            return this.props.confirmRequestData.message || 'Server Error';\n        }\n\n        return null;\n    }\n\n    addFriend = (friendCandidateId) => {\n        const loggedInUserId = this.props.loggedInUserData.id;\n        this.props.addFriend(loggedInUserId, friendCandidateId);\n    }\n\n    confirmRequest = (friendToAcceptId) => {\n        const loggedInUserId = this.props.loggedInUserData.id;\n        this.props.acceptRequest(loggedInUserId, friendToAcceptId);\n    }\n\n    rejectRequest = (friendToRejectId) => {\n        const loggedInUserId = this.props.loggedInUserData.id;\n        this.props.cancelRequest(loggedInUserId, friendToRejectId);\n    }\n\n    render() {\n        const requestLength = this.props.userWaitingForAcceptingRequest.length;\n        let requests = '';\n\n        if (requestLength > 0) {\n            requests = (\n                <Fragment>\n                    <h3 className=\"mt-5\">Respond to Your Friend Requests</h3>\n                    <div className=\"hr-styles\"></div>\n                    {this.props.userWaitingForAcceptingRequest.map((friend) =>\n                        <FriendRequest\n                            key={friend.id}\n                            {...this.props}\n                            {...friend}\n                            firstButtonText={'CONFIRM'}\n                            secondButtonText={'REJECT'}\n                            thirdButtonText={'VIEW PROFILE'}\n                            firstButtonOnClick={this.confirmRequest}\n                            secondButtonOnClick={this.rejectRequest}\n                            thirdButtonLink={`/home/profile/${friend.id}`}\n                        />)}\n                </Fragment>\n            )\n        }\n\n        let waitingForResponseUsers = this.props.usersReceivedRequestFromCurrentUser.length;\n        let friendsCandidates = '';\n\n        if (waitingForResponseUsers > 0) {\n            friendsCandidates = (\n                <Fragment>\n                    <h3 className=\"mt-5\">Pending Requests</h3>\n                    <div className=\"hr-styles\"></div>\n                    {\n                        this.props.usersReceivedRequestFromCurrentUser.map((friend) =>\n                            <Friend\n                                key={friend.id}\n                                {...this.props}\n                                {...friend}\n                                firstButtonLink={`/home/profile/${friend.id}`}\n                                secondButtonLink={`/`}\n                                firstButtonText={'VIEW PROFILE'}\n                                secondButtonText={'CANCEL REQUEST'}\n                                secondButtonOnClick={this.rejectRequest}\n                            />)\n                    }\n                </Fragment>\n            )\n        }\n\n        let friendsCandidatesArr = this.props.friendsCandidatesArr.length;\n        let remainCandidates = '';\n\n        if (friendsCandidatesArr > 0) {\n            remainCandidates = (\n                <Fragment>\n                    <h3 className=\"mt-5\">People You May Know</h3>\n                    <div className=\"hr-styles\"></div>\n                    {\n                        this.props.friendsCandidatesArr.map((friend) =>\n                            <Friend\n                                key={friend.id}\n                                {...this.props}\n                                {...friend}\n                                firstButtonLink={`/home/profile/${friend.id}`}\n                                secondButtonLink={`/`}\n                                firstButtonText={'VIEW PROFILE'}\n                                secondButtonText={'ADD FRIEND'}\n                                secondButtonOnClick={this.addFriend}\n                            />)\n                    }\n                </Fragment>\n            )\n        }\n\n        let noResult = '';\n\n        if (!requests && !friendsCandidates && !remainCandidates) {\n            noResult = (\n                <Fragment>\n                    <h2>All registered users are already your friends!</h2>\n                    <div className=\"hr-styles\"></div>\n                </Fragment>\n            )\n        }\n\n        return (\n            <Fragment>\n                <article className=\"main-article-shared-content\">\n                    <section className=\"friend-content-section\">\n                        <div className=\"container col-md-12 text-center mb-5\">\n                            <h1 className=\"text-center font-weight-bold mt-4\" style={{ 'margin': '1rem auto' }}>\n                                Find Friends\n                            </h1>\n                            <div className=\"hr-styles\"></div>\n                            <section className=\"friend-section\" >\n                                {requests}\n                                {friendsCandidates}\n                                {remainCandidates}\n                                {noResult}\n                            </section>\n                        </div>\n\n                    </section>\n                </article>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        timeLineUserData: state.timeLineUserData,\n        loggedInUserData: state.loggedInUserData,\n\n        findFriendsData: state.findFriends,\n        friendsCandidatesArr: state.findFriends.friendsCandidatesArr,\n        userWaitingForAcceptingRequest: state.findFriends.userWaitingForAcceptingRequest,\n        usersReceivedRequestFromCurrentUser: state.findFriends.usersReceivedRequestFromCurrentUser,\n\n        addfriendData: state.addfriend,\n        cancelRequestData: state.cancelRequest,\n        confirmRequestData: state.confirmRequest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeTimeLineUser: (userId) => { dispatch(changeCurrentTimeLineUserAction(userId)) },\n        changeAllFriends: (userId) => { dispatch(changeAllFriendsAction(userId)) },\n        changeAllPictures: (userId) => { dispatch(changeAllPicturesAction(userId)) },\n        findFriends: (userId) => { dispatch(findFriendsAction(userId)) },\n        addFriend: (loggedInUserId, friendCandidateId) => { dispatch(addFriendAction(loggedInUserId, friendCandidateId)) },\n        cancelRequest: (loggedInUserId, friendToRejectId) => { dispatch(cancelRequestAction(loggedInUserId, friendToRejectId)) },\n        acceptRequest: (loggedInUserId, friendToAcceptId) => { dispatch(confirmRequestAction(loggedInUserId, friendToAcceptId)) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserFindFriendsPage);"]},"metadata":{},"sourceType":"module"}