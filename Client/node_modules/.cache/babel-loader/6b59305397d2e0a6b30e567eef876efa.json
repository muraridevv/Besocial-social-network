{"ast":null,"code":"import _objectWithoutProperties from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\src\\\\components\\\\user\\\\UserEditPage.js\";\nimport React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport '../../styles/FormPages.css';\nimport { connect } from 'react-redux';\nimport { updateUserAction, changeCurrentTimeLineUserAction, changeAllFriendsAction } from '../../store/actions/userActions';\nimport { changeAllPicturesAction } from '../../store/actions/pictureActions';\n\nvar UserEditPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserEditPage, _Component);\n\n  function UserEditPage(props) {\n    var _this;\n\n    _classCallCheck(this, UserEditPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserEditPage).call(this, props));\n\n    _this.componentDidMount = function () {\n      var currentTimeLineUserId = _this.props.match.params.id;\n\n      if (currentTimeLineUserId !== _this.props.timeLineUserData.id) {\n        _this.props.changeTimeLineUser(currentTimeLineUserId);\n\n        _this.props.changeAllPictures(currentTimeLineUserId);\n\n        _this.props.changeAllFriends(currentTimeLineUserId);\n      }\n    };\n\n    _this.handleBlur = function (field) {\n      return function (event) {\n        _this.setState({\n          touched: _objectSpread({}, _this.state.touched, _defineProperty({}, field, true))\n        });\n      };\n    };\n\n    _this.validate = function (username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl) {\n      var emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n      var firstLastNameRegex = /^[A-Z]([a-zA-Z]+)?$/;\n      var testEmail = emailRegex.test(email);\n      var testFirstName = firstLastNameRegex.test(firstName);\n      var testLastName = firstLastNameRegex.test(lastName);\n      return {\n        username: username.length < 4 || username.length > 16,\n        email: email.length === 0 || !testEmail,\n        firstName: firstName.length === 0 || !testFirstName,\n        lastName: lastName.length === 0 || !testLastName,\n        address: address.length === 0,\n        city: city.length === 0,\n        profilePicUrl: profilePicUrl.length === 0,\n        backgroundImageUrl: backgroundImageUrl.length === 0\n      };\n    };\n\n    _this.state = {\n      id: _this.props.timeLineUserData.id,\n      username: _this.props.timeLineUserData.username,\n      email: _this.props.timeLineUserData.email,\n      firstName: _this.props.timeLineUserData.firstName,\n      lastName: _this.props.timeLineUserData.lastName,\n      address: _this.props.timeLineUserData.address,\n      city: _this.props.timeLineUserData.city,\n      profilePicUrl: _this.props.timeLineUserData.profilePicUrl,\n      backgroundImageUrl: _this.props.timeLineUserData.backgroundImageUrl,\n      touched: {\n        username: false,\n        email: false,\n        firstName: false,\n        lastName: false,\n        address: false,\n        city: false,\n        profilePicUrl: false,\n        backgroundImageUrl: false\n      }\n    };\n    _this.onChangeHandler = _this.onChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitHandler = _this.onSubmitHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserEditPage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var loading = this.props.changeTimeLineUserData.loading || this.props.changeAllFriends.loading || this.props.changePicture.loading;\n\n      if (!loading && this.props.timeLineUserData.id !== this.state.id) {\n        this.setState({\n          id: this.props.timeLineUserData.id,\n          username: this.props.timeLineUserData.username,\n          email: this.props.timeLineUserData.email,\n          firstName: this.props.timeLineUserData.firstName,\n          lastName: this.props.timeLineUserData.lastName,\n          address: this.props.timeLineUserData.address,\n          city: this.props.timeLineUserData.city,\n          profilePicUrl: this.props.timeLineUserData.profilePicUrl,\n          backgroundImageUrl: this.props.timeLineUserData.backgroundImageUrl\n        });\n      }\n\n      var errorMessage = this.getErrorMessage(prevProps);\n      var successMessage = this.getSuccessMessage(prevProps);\n\n      if (errorMessage) {\n        toast.error(React.createElement(ToastComponent.errorToast, {\n          text: errorMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n        this.setState({\n          id: this.props.timeLineUserData.id,\n          username: this.props.timeLineUserData.username,\n          email: this.props.timeLineUserData.email,\n          firstName: this.props.timeLineUserData.firstName,\n          lastName: this.props.timeLineUserData.lastName,\n          address: this.props.timeLineUserData.address,\n          city: this.props.timeLineUserData.city,\n          profilePicUrl: this.props.timeLineUserData.profilePicUrl,\n          backgroundImageUrl: this.props.timeLineUserData.backgroundImageUrl\n        });\n      } else if (successMessage) {\n        toast.success(React.createElement(ToastComponent.successToast, {\n          text: successMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n        this.props.history.push(\"/home/profile/\".concat(this.state.id));\n      }\n    }\n  }, {\n    key: \"getSuccessMessage\",\n    value: function getSuccessMessage(prevProps) {\n      if (!this.props.updateUserData.hasError && this.props.updateUserData.message && this.props.updateUserData !== prevProps.updateUserData) {\n        return this.props.updateUserData.message;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getErrorMessage\",\n    value: function getErrorMessage(prevProps) {\n      if (this.props.updateUserData.hasError && prevProps.updateUserData.error !== this.props.updateUserData.error) {\n        return this.props.updateUserData.message || 'Server Error';\n      }\n\n      return null;\n    }\n  }, {\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"onSubmitHandler\",\n    value: function onSubmitHandler(event) {\n      event.preventDefault();\n\n      if (!this.canBeSubmitted()) {\n        return;\n      }\n\n      var _this$state = this.state,\n          touched = _this$state.touched,\n          otherProps = _objectWithoutProperties(_this$state, [\"touched\"]);\n\n      var loggedInUserId = this.props.loggedInUserData.id;\n      this.props.updateUser(loggedInUserId, otherProps);\n    }\n  }, {\n    key: \"canBeSubmitted\",\n    value: function canBeSubmitted() {\n      var _this$state2 = this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          address = _this$state2.address,\n          city = _this$state2.city,\n          profilePicUrl = _this$state2.profilePicUrl,\n          backgroundImageUrl = _this$state2.backgroundImageUrl;\n      var errors = this.validate(username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      return !isDisabled;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          username = _this$state3.username,\n          email = _this$state3.email,\n          firstName = _this$state3.firstName,\n          lastName = _this$state3.lastName,\n          address = _this$state3.address,\n          city = _this$state3.city,\n          profilePicUrl = _this$state3.profilePicUrl,\n          backgroundImageUrl = _this$state3.backgroundImageUrl;\n      var loggedInUserName = userService.getUsername();\n      var loggedInRole = userService.getRole();\n      var isAdmin = userService.isAdmin();\n      var isRoot = userService.isRoot();\n      var showPicsButtons = true;\n\n      if (loggedInUserName !== username && loggedInRole !== \"ROOT\") {\n        showPicsButtons = false;\n      }\n\n      var errors = this.validate(username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl);\n      var isEnabled = !Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n\n      var shouldMarkError = function shouldMarkError(field) {\n        var hasError = errors[field];\n        var shouldShow = _this2.state.touched[field];\n        return hasError ? shouldShow : false;\n      };\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"article\", {\n        className: \"main-article-shared-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"form-content-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center font-weight-bold mt-4\",\n        style: {\n          'margin': '1rem auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Edit Account\"), React.createElement(\"div\", {\n        className: \"hr-styles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"Register-form-container  \",\n        onSubmit: this.onSubmitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section-container w-100 mx-auto text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"left-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"firstName\",\n        className: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control \" + (shouldMarkError('firstName') ? \"error\" : \"\"),\n        id: \"firstName\",\n        name: \"firstName\",\n        value: this.state.firstName,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('firstName'),\n        \"aria-describedby\": \"firstNameHelp\",\n        placeholder: \"Enter first name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), shouldMarkError('firstName') && React.createElement(\"small\", {\n        id: \"firstNameHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, !this.state.firstName ? 'First Name is required!' : 'First Name must start with a capital letter and contain only letters!')), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"address\",\n        className: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control \" + (shouldMarkError('address') ? \"error\" : \"\"),\n        id: \"address\",\n        name: \"address\",\n        value: this.state.address,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('address'),\n        \"aria-describedby\": \"addressHelp\",\n        placeholder: \"Enter address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), shouldMarkError('address') && React.createElement(\"small\", {\n        id: \"addressHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, !this.state.address ? 'Address is required!' : '')), showPicsButtons && React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"profilePicUrl\",\n        className: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Profile image url\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control \" + (shouldMarkError('profilePicUrl') ? \"error\" : \"\"),\n        id: \"profilePicUrl\",\n        name: \"profilePicUrl\",\n        value: this.state.profilePicUrl,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('profilePicUrl'),\n        \"aria-describedby\": \"profilePicUrlHelp\",\n        placeholder: \"Enter profile image url\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), shouldMarkError('profilePicUrl') && React.createElement(\"small\", {\n        id: \"profilePicUrl\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, !this.state.profilePicUrl ? 'Profile Image Url is required!' : ''))), React.createElement(\"section\", {\n        className: \"right-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"lastName\",\n        className: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control \" + (shouldMarkError('lastName') ? \"error\" : \"\"),\n        id: \"lastName\",\n        name: \"lastName\",\n        value: this.state.lastName,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('lastName'),\n        \"aria-describedby\": \"lastNameHelp\",\n        placeholder: \"Enter last name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), shouldMarkError('lastName') && React.createElement(\"small\", {\n        id: \"lastNameHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, !this.state.lastName ? 'Last Name is required!' : 'Last Name must start with a capital letter and contain only letters!')), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"city\",\n        className: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control \" + (shouldMarkError('city') ? \"error\" : \"\"),\n        id: \"city\",\n        name: \"city\",\n        value: this.state.city,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('city'),\n        \"aria-describedby\": \"cityHelp\",\n        placeholder: \"Enter city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), shouldMarkError('city') && React.createElement(\"small\", {\n        id: \"cityHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, !this.state.city ? 'City is required!' : '')), showPicsButtons && React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"backgroundImageUrl\",\n        className: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"Cover image url\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control \" + (shouldMarkError('backgroundImageUrl') ? \"error\" : \"\"),\n        id: \"backgroundImageUrl\",\n        name: \"backgroundImageUrl\",\n        value: this.state.backgroundImageUrl,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('backgroundImageUrl'),\n        \"aria-describedby\": \"backgroundImageUrlHelp\",\n        placeholder: \"Enter cover image url\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), shouldMarkError('backgroundImageUrl') && React.createElement(\"small\", {\n        id: \"backgroundImageUrlHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, !this.state.backgroundImageUrl ? 'Cover Image Url is required!' : '')))), React.createElement(\"div\", {\n        className: \"hr-styles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: !isEnabled,\n        type: \"submit\",\n        className: \"btn App-button-primary btn-lg m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(NavLink, {\n        className: \"btn App-button-primary btn-lg m-3\",\n        to: \"/home/profile/\".concat(this.props.id),\n        role: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Cancel\"), (isAdmin || isRoot) && React.createElement(NavLink, {\n        className: \"btn App-button-primary btn-lg m-3\",\n        to: \"/home/users/all/\".concat(userService.getUserId()),\n        role: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"All Users\")))))));\n    }\n  }]);\n\n  return UserEditPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    timeLineUserData: state.timeLineUserData,\n    loggedInUserData: state.loggedInUserData,\n    updateUserData: state.updateUserData,\n    changeTimeLineUserData: state.changeTimeLineUserData,\n    changePicture: state.changePicture,\n    changeAllFriends: state.changeAllFriends\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateUser: function updateUser(loggedInUserId, userData) {\n      dispatch(updateUserAction(loggedInUserId, userData));\n    },\n    changeTimeLineUser: function changeTimeLineUser(userId) {\n      dispatch(changeCurrentTimeLineUserAction(userId));\n    },\n    changeAllFriends: function changeAllFriends(userId) {\n      dispatch(changeAllFriendsAction(userId));\n    },\n    changeAllPictures: function changeAllPictures(userId) {\n      dispatch(changeAllPicturesAction(userId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEditPage);","map":{"version":3,"sources":["G:\\WORKSPACE\\Project\\Besocial\\Besocial\\Client\\src\\components\\user\\UserEditPage.js"],"names":["React","Component","Fragment","NavLink","userService","toast","ToastComponent","connect","updateUserAction","changeCurrentTimeLineUserAction","changeAllFriendsAction","changeAllPicturesAction","UserEditPage","props","componentDidMount","currentTimeLineUserId","match","params","id","timeLineUserData","changeTimeLineUser","changeAllPictures","changeAllFriends","handleBlur","field","event","setState","touched","state","validate","username","email","firstName","lastName","address","city","profilePicUrl","backgroundImageUrl","emailRegex","firstLastNameRegex","testEmail","test","testFirstName","testLastName","length","onChangeHandler","bind","onSubmitHandler","prevProps","prevState","loading","changeTimeLineUserData","changePicture","errorMessage","getErrorMessage","successMessage","getSuccessMessage","error","position","POSITION","TOP_RIGHT","success","history","push","updateUserData","hasError","message","target","name","value","preventDefault","canBeSubmitted","otherProps","loggedInUserId","loggedInUserData","updateUser","errors","isDisabled","Object","keys","some","x","loggedInUserName","getUsername","loggedInRole","getRole","isAdmin","isRoot","showPicsButtons","isEnabled","shouldMarkError","shouldShow","getUserId","mapStateToProps","mapDispatchToProps","dispatch","userData","userId"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport '../../styles/FormPages.css';\n\nimport { connect } from 'react-redux';\nimport { updateUserAction, changeCurrentTimeLineUserAction, changeAllFriendsAction } from '../../store/actions/userActions';\nimport { changeAllPicturesAction } from '../../store/actions/pictureActions';\n\nclass UserEditPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.timeLineUserData.id,\n            username: this.props.timeLineUserData.username,\n            email: this.props.timeLineUserData.email,\n            firstName: this.props.timeLineUserData.firstName,\n            lastName: this.props.timeLineUserData.lastName,\n            address: this.props.timeLineUserData.address,\n            city: this.props.timeLineUserData.city,\n            profilePicUrl: this.props.timeLineUserData.profilePicUrl,\n            backgroundImageUrl: this.props.timeLineUserData.backgroundImageUrl,\n            touched: {\n                username: false,\n                email: false,\n                firstName: false,\n                lastName: false,\n                address: false,\n                city: false,\n                profilePicUrl: false,\n                backgroundImageUrl: false,\n            }\n        }\n\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    }\n\n    componentDidMount = () => {\n        const currentTimeLineUserId = this.props.match.params.id\n        if (currentTimeLineUserId !== this.props.timeLineUserData.id) {\n            this.props.changeTimeLineUser(currentTimeLineUserId);\n            this.props.changeAllPictures(currentTimeLineUserId);\n            this.props.changeAllFriends(currentTimeLineUserId);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const loading = this.props.changeTimeLineUserData.loading ||\n            this.props.changeAllFriends.loading || this.props.changePicture.loading;\n\n        if (!loading && this.props.timeLineUserData.id !== this.state.id) {\n            this.setState({\n                id: this.props.timeLineUserData.id,\n                username: this.props.timeLineUserData.username,\n                email: this.props.timeLineUserData.email,\n                firstName: this.props.timeLineUserData.firstName,\n                lastName: this.props.timeLineUserData.lastName,\n                address: this.props.timeLineUserData.address,\n                city: this.props.timeLineUserData.city,\n                profilePicUrl: this.props.timeLineUserData.profilePicUrl,\n                backgroundImageUrl: this.props.timeLineUserData.backgroundImageUrl,\n            })\n        }\n\n        const errorMessage = this.getErrorMessage(prevProps);\n        const successMessage = this.getSuccessMessage(prevProps)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n\n            this.setState({\n                id: this.props.timeLineUserData.id,\n                username: this.props.timeLineUserData.username,\n                email: this.props.timeLineUserData.email,\n                firstName: this.props.timeLineUserData.firstName,\n                lastName: this.props.timeLineUserData.lastName,\n                address: this.props.timeLineUserData.address,\n                city: this.props.timeLineUserData.city,\n                profilePicUrl: this.props.timeLineUserData.profilePicUrl,\n                backgroundImageUrl: this.props.timeLineUserData.backgroundImageUrl\n            })\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n            this.props.history.push(`/home/profile/${this.state.id}`);\n        }\n    }\n\n    getSuccessMessage(prevProps) {\n        if (!this.props.updateUserData.hasError && this.props.updateUserData.message && this.props.updateUserData !== prevProps.updateUserData) {\n            return this.props.updateUserData.message;\n        }\n        return null;\n    }\n\n    getErrorMessage(prevProps) {\n        if (this.props.updateUserData.hasError && prevProps.updateUserData.error !== this.props.updateUserData.error) {\n            return this.props.updateUserData.message || 'Server Error';\n        }\n        return null;\n    }\n\n    onChangeHandler(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    onSubmitHandler(event) {\n        event.preventDefault();\n\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n\n        const { touched, ...otherProps } = this.state;\n        const loggedInUserId = this.props.loggedInUserData.id;\n        this.props.updateUser(loggedInUserId, otherProps);\n    }\n\n    canBeSubmitted() {\n        const { username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl } = this.state;\n        const errors = this.validate(username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl);\n        const isDisabled = Object.keys(errors).some(x => errors[x])\n        return !isDisabled;\n    }\n\n    handleBlur = (field) => (event) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n    }\n\n    validate = (username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl) => {\n        const emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n        const firstLastNameRegex = /^[A-Z]([a-zA-Z]+)?$/;\n        let testEmail = emailRegex.test(email)\n        let testFirstName = firstLastNameRegex.test(firstName)\n        let testLastName = firstLastNameRegex.test(lastName)\n\n        return {\n            username: username.length < 4 || username.length > 16,\n            email: email.length === 0 || !testEmail,\n            firstName: firstName.length === 0 || !testFirstName,\n            lastName: lastName.length === 0 || !testLastName,\n            address: address.length === 0,\n            city: city.length === 0,\n            profilePicUrl: profilePicUrl.length === 0,\n            backgroundImageUrl: backgroundImageUrl.length === 0,\n        }\n    }\n\n    render() {\n        const { username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl } = this.state;\n\n        const loggedInUserName = userService.getUsername();\n        const loggedInRole = userService.getRole();\n        const isAdmin = userService.isAdmin();\n        const isRoot = userService.isRoot();\n\n        let showPicsButtons = true;\n        if (loggedInUserName !== username && (loggedInRole !== \"ROOT\")) {\n            showPicsButtons = false;\n        }\n        const errors = this.validate(username, email, firstName, lastName, address, city, profilePicUrl, backgroundImageUrl);\n        const isEnabled = !Object.keys(errors).some(x => errors[x])\n\n        const shouldMarkError = (field) => {\n            const hasError = errors[field];\n            const shouldShow = this.state.touched[field];\n\n            return hasError ? shouldShow : false;\n        }\n        return (\n            <Fragment>\n                <article className=\"main-article-shared-content\">\n                    <section className=\"form-content-section\">\n                        <div className=\"container mb-4\">\n                            <h1 className=\"text-center font-weight-bold mt-4\" style={{ 'margin': '1rem auto' }}>Edit Account</h1>\n\n                            <div className=\"hr-styles\"></div>\n\n                            <form className=\"Register-form-container  \" onSubmit={this.onSubmitHandler} >\n\n                                <div className=\"section-container w-100 mx-auto text-center\">\n                                    <section className=\"left-section\">\n                                        {/* <div className=\"form-group\">\n                                <label htmlFor=\"username\" className=\"font-weight-bold\" >Username</label>\n                                <input\n                                    type=\"text\"\n                                    className={\"form-control \" + (shouldMarkError('username') ? \"error\" : \"\")}\n                                    id=\"username\"\n                                    name=\"username\"\n                                    value={this.state.username}\n                                    onChange={this.onChangeHandler}\n                                    onBlur={this.handleBlur('username')}\n                                    aria-describedby=\"usernameHelp\"\n                                    placeholder=\"Enter username\"\n                                />\n                                {shouldMarkError('username') && <small id=\"usernameHelp\" className=\"form-text alert alert-danger\"> {(!this.state.username ? 'Username is required!' : 'Username should be at least 4 and maximum 16 characters long!')}</small>}\n                            </div> */}\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"firstName\" className=\"font-weight-bold\" >First Name</label>\n                                            <input\n                                                type=\"text\"\n                                                className={\"form-control \" + (shouldMarkError('firstName') ? \"error\" : \"\")}\n                                                id=\"firstName\"\n                                                name=\"firstName\"\n                                                value={this.state.firstName}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('firstName')}\n                                                aria-describedby=\"firstNameHelp\"\n                                                placeholder=\"Enter first name\"\n                                            />\n                                            {shouldMarkError('firstName') && <small id=\"firstNameHelp\" className=\"form-text alert alert-danger\">{(!this.state.firstName ? 'First Name is required!' : 'First Name must start with a capital letter and contain only letters!')}</small>}\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"address\" className=\"font-weight-bold\" >Address</label>\n                                            <input\n                                                type=\"text\"\n                                                className={\"form-control \" + (shouldMarkError('address') ? \"error\" : \"\")}\n                                                id=\"address\"\n                                                name=\"address\"\n                                                value={this.state.address}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('address')}\n                                                aria-describedby=\"addressHelp\"\n                                                placeholder=\"Enter address\"\n                                            />\n                                            {shouldMarkError('address') && <small id=\"addressHelp\" className=\"form-text alert alert-danger\">{(!this.state.address ? 'Address is required!' : '')}</small>}\n                                        </div>\n\n                                        {showPicsButtons && <div className=\"form-group\">\n                                            <label htmlFor=\"profilePicUrl\" className=\"font-weight-bold\" >Profile image url</label>\n                                            <input\n                                                type=\"text\"\n                                                className={\"form-control \" + (shouldMarkError('profilePicUrl') ? \"error\" : \"\")}\n                                                id=\"profilePicUrl\"\n                                                name=\"profilePicUrl\"\n                                                value={this.state.profilePicUrl}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('profilePicUrl')}\n                                                aria-describedby=\"profilePicUrlHelp\"\n                                                placeholder=\"Enter profile image url\"\n                                            />\n                                            {shouldMarkError('profilePicUrl') && <small id=\"profilePicUrl\" className=\"form-text alert alert-danger\">{(!this.state.profilePicUrl ? 'Profile Image Url is required!' : '')}</small>}\n                                        </div>}\n\n                                    </section>\n\n                                    <section className=\"right-section\">\n                                        {/* <div className=\"form-group\">\n                                <label htmlFor=\"email\" className=\"font-weight-bold\">Email Address</label>\n                                <input\n                                    type=\"email\"\n                                    className={\"form-control \" + (shouldMarkError('email') ? \"error\" : \"\")}\n                                    id=\"email\"\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.onChangeHandler}\n                                    onBlur={this.handleBlur('email')}\n                                    aria-describedby=\"emailHelp\"\n                                    placeholder=\"Enter email\"\n\n                                />\n                                {shouldMarkError('email') && <small id=\"emailHelp\" className=\"form-text alert alert-danger\">{(!this.state.email ? 'Email is required!' : 'Invalid e-mail address!')}</small>}\n                            </div> */}\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"lastName\" className=\"font-weight-bold\">Last Name</label>\n                                            <input\n                                                type=\"text\"\n                                                className={\"form-control \" + (shouldMarkError('lastName') ? \"error\" : \"\")}\n                                                id=\"lastName\"\n                                                name=\"lastName\"\n                                                value={this.state.lastName}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('lastName')}\n                                                aria-describedby=\"lastNameHelp\"\n                                                placeholder=\"Enter last name\"\n                                            />\n                                            {shouldMarkError('lastName') && <small id=\"lastNameHelp\" className=\"form-text alert alert-danger\">{(!this.state.lastName ? 'Last Name is required!' : 'Last Name must start with a capital letter and contain only letters!')}</small>}\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"city\" className=\"font-weight-bold\">City</label>\n                                            <input\n                                                type=\"text\"\n                                                className={\"form-control \" + (shouldMarkError('city') ? \"error\" : \"\")}\n                                                id=\"city\"\n                                                name=\"city\"\n                                                value={this.state.city}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('city')}\n                                                aria-describedby=\"cityHelp\"\n                                                placeholder=\"Enter city\"\n                                            />\n                                            {shouldMarkError('city') && <small id=\"cityHelp\" className=\"form-text alert alert-danger\">{(!this.state.city ? 'City is required!' : '')}</small>}\n                                        </div>\n\n                                        {showPicsButtons && <div className=\"form-group\">\n                                            <label htmlFor=\"backgroundImageUrl\" className=\"font-weight-bold\" >Cover image url</label>\n                                            <input\n                                                type=\"text\"\n                                                className={\"form-control \" + (shouldMarkError('backgroundImageUrl') ? \"error\" : \"\")}\n                                                id=\"backgroundImageUrl\"\n                                                name=\"backgroundImageUrl\"\n                                                value={this.state.backgroundImageUrl}\n                                                onChange={this.onChangeHandler}\n                                                onBlur={this.handleBlur('backgroundImageUrl')}\n                                                aria-describedby=\"backgroundImageUrlHelp\"\n                                                placeholder=\"Enter cover image url\"\n                                            />\n                                            {shouldMarkError('backgroundImageUrl') && <small id=\"backgroundImageUrlHelp\" className=\"form-text alert alert-danger\">{(!this.state.backgroundImageUrl ? 'Cover Image Url is required!' : '')}</small>}\n                                        </div>}\n                                    </section>\n                                </div>\n\n                                <div className=\"hr-styles\"></div>\n                                <div className=\"text-center\">\n                                    <button disabled={!isEnabled} type=\"submit\" className=\"btn App-button-primary btn-lg m-3\">Edit</button>\n                                    <NavLink className=\"btn App-button-primary btn-lg m-3\" to={`/home/profile/${this.props.id}`} role=\"button\">Cancel</NavLink>\n                                    {(isAdmin || isRoot) && <NavLink className=\"btn App-button-primary btn-lg m-3\" to={`/home/users/all/${userService.getUserId()}`} role=\"button\">All Users</NavLink>}\n                                </div>\n                            </form>\n                        </div>\n                    </section>\n                </article>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        timeLineUserData: state.timeLineUserData,\n        loggedInUserData: state.loggedInUserData,\n        updateUserData: state.updateUserData,\n        changeTimeLineUserData: state.changeTimeLineUserData,\n        changePicture: state.changePicture,\n        changeAllFriends: state.changeAllFriends\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateUser: (loggedInUserId, userData) => { dispatch(updateUserAction(loggedInUserId, userData)) },\n        changeTimeLineUser: (userId) => { dispatch(changeCurrentTimeLineUserAction(userId)) },\n        changeAllFriends: (userId) => { dispatch(changeAllFriendsAction(userId)) },\n        changeAllPictures: (userId) => { dispatch(changeAllPicturesAction(userId)) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEditPage);\n\n"]},"metadata":{},"sourceType":"module"}