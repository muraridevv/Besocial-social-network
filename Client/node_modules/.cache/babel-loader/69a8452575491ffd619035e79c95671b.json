{"ast":null,"code":"import _defineProperty from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\src\\\\components\\\\home\\\\WritePost.js\";\nimport React, { Fragment, Component } from 'react';\nimport { userService } from '../../infrastructure';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nvar WritePost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WritePost, _Component);\n\n  function WritePost(props) {\n    var _this;\n\n    _classCallCheck(this, WritePost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WritePost).call(this, props));\n\n    _this.changeUserData = function (userdata) {\n      _this.setState({\n        loggedInUserProfilePicUrl: userdata.profilePicUrl\n      });\n    };\n\n    _this.handleBlur = function (field) {\n      return function (event) {\n        _this.setState({\n          touched: _objectSpread({}, _this.state.touched, _defineProperty({}, field, true))\n        });\n      };\n    };\n\n    _this.validate = function (content) {\n      return {\n        content: content.length === 0\n      };\n    };\n\n    _this.state = {\n      content: '',\n      imageUrl: '',\n      createPostData: '',\n      touched: {\n        content: false\n      }\n    };\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeHandler = _this.onChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitHandler = _this.onSubmitHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(WritePost, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var loading = this.props.createPostData.loading || this.props.loadingAllPosts;\n\n      if (!loading && this.state.createPostData !== this.props.createPostData) {\n        this.setState({\n          content: '',\n          imageUrl: '',\n          createPostData: this.props.createPostData\n        });\n      }\n    }\n  }, {\n    key: \"onSubmitHandler\",\n    value: function onSubmitHandler(event) {\n      event.preventDefault();\n\n      if (!this.canBeSubmitted()) {\n        return;\n      }\n\n      var _this$state = this.state,\n          content = _this$state.content,\n          imageUrl = _this$state.imageUrl;\n      this.props.createPost(content, imageUrl);\n    }\n  }, {\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"canBeSubmitted\",\n    value: function canBeSubmitted() {\n      var content = this.state.content;\n      var errors = this.validate(content);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      return !isDisabled;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var content = this.state.content;\n      var errors = this.validate(content);\n      var isEnabled = !Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      var displayButon = isEnabled ? '' : 'hidden';\n      var imageClass = userService.getImageSize(this.props.loggedInUser.profilePicUrl);\n      var loggedInUserProfilePicUrl = this.props.loggedInUser.profilePicUrl;\n      var loggedInUserFirstName = this.props.loggedInUser.firstName;\n      var formattedUsername = userService.formatUsername(loggedInUserFirstName);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"posts-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"write-post\",\n        id: \"create-post-button-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: imageClass,\n        src: loggedInUserProfilePicUrl,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"post-area-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"post-form\",\n        onSubmit: this.onSubmitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        id: \"post-textarea-form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(TextareaAutosize, {\n        name: \"content\",\n        id: \"content\",\n        className: \"post-textarea\",\n        value: this.state.content,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('content'),\n        \"aria-describedby\": \"contentHelp\",\n        placeholder: \"What's on your mind, \".concat(formattedUsername, \"?\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: !isEnabled,\n        style: {\n          'visibility': \"\".concat(displayButon)\n        },\n        type: \"submit\",\n        className: \"btn uiButtonGroup post-button-fbPhotoCurationControl App-button-primary \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"POST\"))))))));\n    }\n  }]);\n\n  return WritePost;\n}(Component);\n\nexport { WritePost as default };","map":{"version":3,"sources":["G:\\WORKSPACE\\Project\\Besocial\\Besocial\\Client\\src\\components\\home\\WritePost.js"],"names":["React","Fragment","Component","userService","TextareaAutosize","WritePost","props","changeUserData","userdata","setState","loggedInUserProfilePicUrl","profilePicUrl","handleBlur","field","event","touched","state","validate","content","length","imageUrl","createPostData","bind","onChangeHandler","onSubmitHandler","prevProps","prevState","loading","loadingAllPosts","preventDefault","canBeSubmitted","createPost","target","name","value","errors","isDisabled","Object","keys","some","x","isEnabled","displayButon","imageClass","getImageSize","loggedInUser","loggedInUserFirstName","firstName","formattedUsername","formatUsername"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;IAEqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;;AADe,UA6BnBC,cA7BmB,GA6BF,UAACC,QAAD,EAAc;AAC3B,YAAKC,QAAL,CAAc;AAACC,QAAAA,yBAAyB,EAAEF,QAAQ,CAACG;AAArC,OAAd;AACH,KA/BkB;;AAAA,UAiDnBC,UAjDmB,GAiDN,UAACC,KAAD;AAAA,aAAW,UAACC,KAAD,EAAW;AAC/B,cAAKL,QAAL,CAAc;AACVM,UAAAA,OAAO,oBAAO,MAAKC,KAAL,CAAWD,OAAlB,sBAA4BF,KAA5B,EAAoC,IAApC;AADG,SAAd;AAGH,OAJY;AAAA,KAjDM;;AAAA,UA8DnBI,QA9DmB,GA8DR,UAACC,OAAD,EAAa;AACpB,aAAO;AACHA,QAAAA,OAAO,EAAEA,OAAO,CAACC,MAAR,KAAmB;AADzB,OAAP;AAGH,KAlEkB;;AAGf,UAAKH,KAAL,GAAa;AACTE,MAAAA,OAAO,EAAE,EADA;AAETE,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,cAAc,EAAE,EAHP;AAITN,MAAAA,OAAO,EAAE;AACLG,QAAAA,OAAO,EAAE;AADJ;AAJA,KAAb;AASA,UAAKN,UAAL,GAAkB,MAAKA,UAAL,CAAgBU,IAAhB,uDAAlB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,uDAAvB;AACA,UAAKE,eAAL,GAAuB,MAAKA,eAAL,CAAqBF,IAArB,uDAAvB;AAde;AAelB;;;;uCAEkBG,S,EAAWC,S,EAAW;AACrC,UAAMC,OAAO,GAAG,KAAKrB,KAAL,CAAWe,cAAX,CAA0BM,OAA1B,IAAqC,KAAKrB,KAAL,CAAWsB,eAAhE;;AAEA,UAAI,CAACD,OAAD,IAAY,KAAKX,KAAL,CAAWK,cAAX,KAA8B,KAAKf,KAAL,CAAWe,cAAzD,EAAyE;AACrE,aAAKZ,QAAL,CAAc;AACVS,UAAAA,OAAO,EAAE,EADC;AAEVE,UAAAA,QAAQ,EAAE,EAFA;AAGVC,UAAAA,cAAc,EAAE,KAAKf,KAAL,CAAWe;AAHjB,SAAd;AAKH;AACJ;;;oCAMeP,K,EAAO;AACnBA,MAAAA,KAAK,CAACe,cAAN;;AACA,UAAI,CAAC,KAAKC,cAAL,EAAL,EAA4B;AACxB;AACH;;AAJkB,wBAMW,KAAKd,KANhB;AAAA,UAMXE,OANW,eAMXA,OANW;AAAA,UAMFE,QANE,eAMFA,QANE;AAOnB,WAAKd,KAAL,CAAWyB,UAAX,CAAsBb,OAAtB,EAA+BE,QAA/B;AACH;;;oCAEeN,K,EAAO;AACnB,WAAKL,QAAL,qBACKK,KAAK,CAACkB,MAAN,CAAaC,IADlB,EACyBnB,KAAK,CAACkB,MAAN,CAAaE,KADtC;AAGH;;;qCAQgB;AAAA,UACLhB,OADK,GACO,KAAKF,KADZ,CACLE,OADK;AAEb,UAAMiB,MAAM,GAAG,KAAKlB,QAAL,CAAcC,OAAd,CAAf;AACA,UAAMkB,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,IAApB,CAAyB,UAAAC,CAAC;AAAA,eAAIL,MAAM,CAACK,CAAD,CAAV;AAAA,OAA1B,CAAnB;AACA,aAAO,CAACJ,UAAR;AACH;;;6BAQQ;AAAA,UACGlB,OADH,GACe,KAAKF,KADpB,CACGE,OADH;AAEL,UAAMiB,MAAM,GAAG,KAAKlB,QAAL,CAAcC,OAAd,CAAf;AACA,UAAMuB,SAAS,GAAG,CAACJ,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,IAApB,CAAyB,UAAAC,CAAC;AAAA,eAAIL,MAAM,CAACK,CAAD,CAAV;AAAA,OAA1B,CAAnB;AACA,UAAME,YAAY,GAAGD,SAAS,GAAG,EAAH,GAAQ,QAAtC;AAEA,UAAME,UAAU,GAAGxC,WAAW,CAACyC,YAAZ,CAAyB,KAAKtC,KAAL,CAAWuC,YAAX,CAAwBlC,aAAjD,CAAnB;AACA,UAAMD,yBAAyB,GAAG,KAAKJ,KAAL,CAAWuC,YAAX,CAAwBlC,aAA1D;AACA,UAAMmC,qBAAqB,GAAG,KAAKxC,KAAL,CAAWuC,YAAX,CAAwBE,SAAtD;AAEA,UAAIC,iBAAiB,GAAG7C,WAAW,CAAC8C,cAAZ,CAA2BH,qBAA3B,CAAxB;AAEA,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAS,QAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,EAAE,EAAC,8BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAEH,UAAhB;AAA4B,QAAA,GAAG,EAAEjC,yBAAjC;AAA4D,QAAA,GAAG,EAAC,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,QAAQ,EAAE,KAAKc,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,EAAf;AAAkB,QAAA,EAAE,EAAC,0BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,EAAE,EAAC,SAFP;AAGI,QAAA,SAAS,EAAC,eAHd;AAII,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,OAJtB;AAKI,QAAA,QAAQ,EAAE,KAAKK,eALnB;AAMI,QAAA,MAAM,EAAE,KAAKX,UAAL,CAAgB,SAAhB,CANZ;AAOI,4BAAiB,aAPrB;AAQI,QAAA,WAAW,iCAA0BoC,iBAA1B,MARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAeI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,QAAQ,EAAE,CAACP,SAAnB;AAA8B,QAAA,KAAK,EAAE;AAAE,kCAAiBC,YAAjB;AAAF,SAArC;AAA0E,QAAA,IAAI,EAAC,QAA/E;AAAwF,QAAA,SAAS,EAAC,0EAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAfJ,CADJ,CAJJ,CADJ,CADJ,CADJ,CADJ;AAmCH;;;;EApHkCxC,S;;SAAlBG,S","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { userService } from '../../infrastructure';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nexport default class WritePost extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            content: '',\n            imageUrl: '',\n            createPostData: '',\n            touched: {\n                content: false,\n            }\n        };\n\n        this.handleBlur = this.handleBlur.bind(this);\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const loading = this.props.createPostData.loading || this.props.loadingAllPosts;\n\n        if (!loading && this.state.createPostData !== this.props.createPostData) {\n            this.setState({\n                content: '',\n                imageUrl: '',\n                createPostData: this.props.createPostData,\n            })\n        }\n    }\n\n    changeUserData = (userdata) => {\n        this.setState({loggedInUserProfilePicUrl: userdata.profilePicUrl})\n    }\n\n    onSubmitHandler(event) {\n        event.preventDefault();\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n\n        const { content, imageUrl } = this.state;\n        this.props.createPost(content, imageUrl);\n    }\n\n    onChangeHandler(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleBlur = (field) => (event) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n    }\n\n    canBeSubmitted() {\n        const { content } = this.state;\n        const errors = this.validate(content);\n        const isDisabled = Object.keys(errors).some(x => errors[x])\n        return !isDisabled;\n    }\n\n    validate = (content) => {\n        return {\n            content: content.length === 0,\n        }\n    }\n\n    render() {\n        const { content } = this.state;\n        const errors = this.validate(content);\n        const isEnabled = !Object.keys(errors).some(x => errors[x]);\n        const displayButon = isEnabled ? '' : 'hidden';\n\n        const imageClass = userService.getImageSize(this.props.loggedInUser.profilePicUrl);\n        const loggedInUserProfilePicUrl = this.props.loggedInUser.profilePicUrl;\n        const loggedInUserFirstName = this.props.loggedInUser.firstName;\n\n        let formattedUsername = userService.formatUsername(loggedInUserFirstName)\n\n        return (\n            <Fragment>\n                <section className=\"posts-section\">\n                    <div className=\"write-post\" id=\"create-post-button-container\">\n                        <div className=\"post\">\n                            <div className=\"post-image\">\n                                <img className={imageClass} src={loggedInUserProfilePicUrl} alt=\"\" />\n                            </div>\n                            <div className=\"post-area-container\">\n                                <form id=\"post-form\" onSubmit={this.onSubmitHandler}>\n                                    <div className=\"\" id=\"post-textarea-form-group\">\n                                        <TextareaAutosize\n                                            name=\"content\"\n                                            id=\"content\"\n                                            className=\"post-textarea\"\n                                            value={this.state.content}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('content')}\n                                            aria-describedby=\"contentHelp\"\n                                            placeholder={`What's on your mind, ${formattedUsername}?`}\n                                        >\n                                        </TextareaAutosize>\n                                    </div>\n\n                                    <div className=\"text-center\">\n                                        <button disabled={!isEnabled} style={{ 'visibility': `${displayButon}` }} type=\"submit\" className=\"btn uiButtonGroup post-button-fbPhotoCurationControl App-button-primary \">POST</button>\n                                    </div>\n\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}