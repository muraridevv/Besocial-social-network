{"ast":null,"code":"import { requester } from '../../infrastructure';\nimport { ADD_PICTURE_SUCCESS, ADD_PICTURE_BEGIN, ADD_PICTURE_ERROR, REMOVE_PICTURE_SUCCESS, REMOVE_PICTURE_BEGIN, REMOVE_PICTURE_ERROR, FETCH_PICTURE_SUCCESS, FETCH_PICTURE_BEGIN, FETCH_PICTURE_ERROR, CHANGE_PICTURES_SUCCESS, CHANGE_PICTURES_BEGIN, CHANGE_PICTURES_ERROR, UPDATE_PICTURES } from './actionTypes'; // addPicture\n\nfunction addPictureSuccess(response) {\n  return {\n    type: ADD_PICTURE_SUCCESS,\n    payload: response\n  };\n}\n\nfunction addPictureBegin() {\n  return {\n    type: ADD_PICTURE_BEGIN\n  };\n}\n\nfunction addPictureError(error, message, status, path) {\n  return {\n    type: ADD_PICTURE_ERROR,\n    error: error,\n    message: message,\n    status: status,\n    path: path\n  };\n}\n\nfunction addPicturesAction(data, timeLineUserId) {\n  return function (dispatch) {\n    dispatch(addPictureBegin());\n    return requester.addPhoto('/pictures/add', data, function (response) {\n      if (response.error) {\n        var error = response.error,\n            message = response.message,\n            status = response.status,\n            path = response.path;\n        dispatch(addPictureError(error, message, status, path));\n      } else {\n        dispatch(changeAllPicturesAction(timeLineUserId));\n        dispatch(addPictureSuccess(response));\n      }\n    }).catch(function (err) {\n      if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n        localStorage.clear();\n      }\n\n      dispatch(addPictureError('', \"Error: \".concat(err.message), err.status, ''));\n    });\n  };\n}\n\n; // removePicture\n\nfunction removePictureSuccess(response) {\n  return {\n    type: REMOVE_PICTURE_SUCCESS,\n    payload: response\n  };\n}\n\nfunction removePictureBegin() {\n  return {\n    type: REMOVE_PICTURE_BEGIN\n  };\n}\n\nfunction removePictureError(error, message, status, path) {\n  return {\n    type: REMOVE_PICTURE_ERROR,\n    error: error,\n    message: message,\n    status: status,\n    path: path\n  };\n}\n\nfunction removePictureAction(loggedInUserId, photoToRemoveId, timeLineUserId) {\n  var requestBody = {\n    loggedInUserId: loggedInUserId,\n    photoToRemoveId: photoToRemoveId\n  };\n  return function (dispatch) {\n    dispatch(removePictureBegin());\n    return requester.post('/pictures/remove', requestBody, function (response) {\n      if (response.error) {\n        var error = response.error,\n            message = response.message,\n            status = response.status,\n            path = response.path;\n        dispatch(removePictureError(error, message, status, path));\n      } else {\n        dispatch(changeAllPicturesAction(timeLineUserId));\n        dispatch(removePictureSuccess(response));\n      }\n    }).catch(function (err) {\n      if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n        localStorage.clear();\n      }\n\n      dispatch(removePictureError('', \"Error: \".concat(err.message), err.status, ''));\n    });\n  };\n}\n\n; // fetchPictures\n\nfunction fetchPictureSuccess(picturesArr) {\n  return {\n    type: FETCH_PICTURE_SUCCESS,\n    payload: picturesArr\n  };\n}\n\nfunction fetchPictureBegin() {\n  return {\n    type: FETCH_PICTURE_BEGIN\n  };\n}\n\nfunction fetchPictureError(error, message, status, path) {\n  return {\n    type: FETCH_PICTURE_ERROR,\n    error: error,\n    message: message,\n    status: status,\n    path: path\n  };\n}\n\nfunction fetchPicturesAction(userId) {\n  return function (dispatch) {\n    dispatch(fetchPictureBegin());\n    return requester.get('/pictures/all/' + userId, function (response) {\n      if (response.error) {\n        var error = response.error,\n            message = response.message,\n            status = response.status,\n            path = response.path;\n        dispatch(fetchPictureError(error, message, status, path));\n      } else {\n        dispatch(fetchPictureSuccess(response));\n      }\n    }).catch(function (err) {\n      if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n        localStorage.clear();\n      }\n\n      dispatch(fetchPictureError('', \"Error: \".concat(err.message), err.status, ''));\n    });\n  };\n}\n\n; // changePicturesArr\n\nfunction changePictureSuccess(picturesArr) {\n  return {\n    type: CHANGE_PICTURES_SUCCESS,\n    payload: picturesArr\n  };\n}\n\nfunction changePictureBegin() {\n  return {\n    type: CHANGE_PICTURES_BEGIN\n  };\n}\n\nfunction changePictureError(error, message, status, path) {\n  return {\n    type: CHANGE_PICTURES_ERROR,\n    error: error,\n    message: message,\n    status: status,\n    path: path\n  };\n}\n\nvar updatePicturesAction = function updatePicturesAction(picturesArr) {\n  return {\n    type: UPDATE_PICTURES,\n    payload: picturesArr\n  };\n};\n\nfunction changeAllPicturesAction(userId) {\n  return function (dispatch) {\n    dispatch(changePictureBegin());\n    return requester.get('/pictures/all/' + userId, function (response) {\n      if (response.error) {\n        var error = response.error,\n            message = response.message,\n            status = response.status,\n            path = response.path;\n        dispatch(changePictureError(error, message, status, path));\n      } else {\n        dispatch(updatePicturesAction(response));\n        dispatch(changePictureSuccess(response));\n      }\n    }).catch(function (err) {\n      if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n        localStorage.clear();\n      }\n\n      dispatch(changePictureError('', \"Error: \".concat(err.message), err.status, ''));\n    });\n  };\n}\n\n;\nexport { addPicturesAction, removePictureAction, fetchPicturesAction, changeAllPicturesAction };","map":{"version":3,"sources":["G:\\WORKSPACE\\Project\\Besocial\\Besocial\\Client\\src\\store\\actions\\pictureActions.js"],"names":["requester","ADD_PICTURE_SUCCESS","ADD_PICTURE_BEGIN","ADD_PICTURE_ERROR","REMOVE_PICTURE_SUCCESS","REMOVE_PICTURE_BEGIN","REMOVE_PICTURE_ERROR","FETCH_PICTURE_SUCCESS","FETCH_PICTURE_BEGIN","FETCH_PICTURE_ERROR","CHANGE_PICTURES_SUCCESS","CHANGE_PICTURES_BEGIN","CHANGE_PICTURES_ERROR","UPDATE_PICTURES","addPictureSuccess","response","type","payload","addPictureBegin","addPictureError","error","message","status","path","addPicturesAction","data","timeLineUserId","dispatch","addPhoto","changeAllPicturesAction","catch","err","localStorage","clear","removePictureSuccess","removePictureBegin","removePictureError","removePictureAction","loggedInUserId","photoToRemoveId","requestBody","post","fetchPictureSuccess","picturesArr","fetchPictureBegin","fetchPictureError","fetchPicturesAction","userId","get","changePictureSuccess","changePictureBegin","changePictureError","updatePicturesAction"],"mappings":"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","sourcesContent":["import { requester } from '../../infrastructure';\nimport {\n    ADD_PICTURE_SUCCESS, ADD_PICTURE_BEGIN, ADD_PICTURE_ERROR,\n    REMOVE_PICTURE_SUCCESS, REMOVE_PICTURE_BEGIN, REMOVE_PICTURE_ERROR,\n    FETCH_PICTURE_SUCCESS, FETCH_PICTURE_BEGIN, FETCH_PICTURE_ERROR,\n    CHANGE_PICTURES_SUCCESS, CHANGE_PICTURES_BEGIN, CHANGE_PICTURES_ERROR, UPDATE_PICTURES,\n} from './actionTypes';\n\n// addPicture\nfunction addPictureSuccess(response) {\n    return {\n        type: ADD_PICTURE_SUCCESS,\n        payload: response\n    }\n}\n\nfunction addPictureBegin() {\n    return {\n        type: ADD_PICTURE_BEGIN,\n    }\n}\n\nfunction addPictureError(error, message, status, path) {\n    return {\n        type: ADD_PICTURE_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nfunction addPicturesAction(data, timeLineUserId) {\n    return (dispatch) => {\n        dispatch(addPictureBegin())\n        return requester.addPhoto('/pictures/add', data, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(addPictureError(error, message, status, path));\n            } else {\n                dispatch(changeAllPicturesAction(timeLineUserId));\n                dispatch(addPictureSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(addPictureError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n};\n\n// removePicture\nfunction removePictureSuccess(response) {\n    return {\n        type: REMOVE_PICTURE_SUCCESS,\n        payload: response\n    }\n}\n\nfunction removePictureBegin() {\n    return {\n        type: REMOVE_PICTURE_BEGIN,\n    }\n}\n\nfunction removePictureError(error, message, status, path) {\n    return {\n        type: REMOVE_PICTURE_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nfunction removePictureAction(loggedInUserId, photoToRemoveId, timeLineUserId) {\n    const requestBody = { loggedInUserId, photoToRemoveId }\n    return (dispatch) => {\n        dispatch(removePictureBegin())\n        return requester.post('/pictures/remove', requestBody, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(removePictureError(error, message, status, path));\n            } else {\n                dispatch(changeAllPicturesAction(timeLineUserId));\n                dispatch(removePictureSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(removePictureError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n};\n\n// fetchPictures\nfunction fetchPictureSuccess(picturesArr) {\n    return {\n        type: FETCH_PICTURE_SUCCESS,\n        payload: picturesArr\n    }\n}\n\nfunction fetchPictureBegin() {\n    return {\n        type: FETCH_PICTURE_BEGIN,\n    }\n}\n\nfunction fetchPictureError(error, message, status, path) {\n    return {\n        type: FETCH_PICTURE_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nfunction fetchPicturesAction(userId) {\n    return (dispatch) => {\n        dispatch(fetchPictureBegin())\n        return requester.get('/pictures/all/' + userId, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(fetchPictureError(error, message, status, path));\n            } else {\n                dispatch(fetchPictureSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(fetchPictureError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n};\n\n\n// changePicturesArr\nfunction changePictureSuccess(picturesArr) {\n    return {\n        type: CHANGE_PICTURES_SUCCESS,\n        payload: picturesArr\n    }\n}\n\nfunction changePictureBegin() {\n    return {\n        type: CHANGE_PICTURES_BEGIN,\n    }\n}\n\nfunction changePictureError(error, message, status, path) {\n    return {\n        type: CHANGE_PICTURES_ERROR,\n        error,\n        message,\n        status,\n        path,\n    }\n}\n\nconst updatePicturesAction = (picturesArr) => {\n    return {\n        type: UPDATE_PICTURES,\n        payload: picturesArr\n    }\n}\n\nfunction changeAllPicturesAction(userId) {\n    return (dispatch) => {\n        dispatch(changePictureBegin())\n        return requester.get('/pictures/all/' + userId, (response) => {\n            if (response.error) {\n                const { error, message, status, path } = response;\n                dispatch(changePictureError(error, message, status, path));\n            } else {\n                dispatch(updatePicturesAction(response));\n                dispatch(changePictureSuccess(response));\n            }\n        }).catch(err => {\n            if (err.status === 403 && err.message === 'Your JWT token is expired. Please log in!') {\n                localStorage.clear();\n            }\n            dispatch(changePictureError('', `Error: ${err.message}`, err.status, ''));\n        })\n    }\n};\n\nexport { addPicturesAction, removePictureAction, fetchPicturesAction, changeAllPicturesAction };"]},"metadata":{},"sourceType":"module"}