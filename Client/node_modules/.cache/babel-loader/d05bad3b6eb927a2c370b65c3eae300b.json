{"ast":null,"code":"import _toConsumableArray from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { ADD_PICTURE_SUCCESS, ADD_PICTURE_BEGIN, ADD_PICTURE_ERROR, REMOVE_PICTURE_SUCCESS, REMOVE_PICTURE_BEGIN, REMOVE_PICTURE_ERROR, FETCH_PICTURE_SUCCESS, FETCH_PICTURE_BEGIN, FETCH_PICTURE_ERROR, CHANGE_PICTURES_SUCCESS, CHANGE_PICTURES_BEGIN, CHANGE_PICTURES_ERROR, UPDATE_PICTURES } from '../actions/actionTypes'; // addPictureReducer\n\nvar initialStateAddPicture = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\n\nfunction addPictureReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAddPicture;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_PICTURE_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n\n    case ADD_PICTURE_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n\n    case ADD_PICTURE_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n} // removePictureReducer\n\n\nvar initialStateRemovePicture = {\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\n\nfunction removePictureReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateRemovePicture;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REMOVE_PICTURE_BEGIN:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n\n    case REMOVE_PICTURE_SUCCESS:\n      return Object.assign({}, state, {\n        hasError: false,\n        error: '',\n        message: action.payload.message,\n        status: '',\n        path: '',\n        loading: false\n      });\n\n    case REMOVE_PICTURE_ERROR:\n      return Object.assign({}, state, {\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n} // fetchPictureArrReducer\n\n\nvar initialStateFetchPicture = {\n  picturesArr: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\n\nfunction fetchPictureReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateFetchPicture;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_PICTURE_BEGIN:\n      return Object.assign({}, state, {\n        picturesArr: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n\n    case FETCH_PICTURE_SUCCESS:\n      return Object.assign({}, state, {\n        picturesArr: _toConsumableArray(action.payload),\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n\n    case FETCH_PICTURE_ERROR:\n      return Object.assign({}, state, {\n        picturesArr: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n\n    case UPDATE_PICTURES:\n      return Object.assign({}, state, {\n        picturesArr: _toConsumableArray(action.payload),\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n} // changePictureReducer\n\n\nvar initialStateChangePicture = {\n  picturesArr: [],\n  hasError: false,\n  error: '',\n  message: '',\n  status: '',\n  path: '',\n  loading: false\n};\n\nfunction changePictureReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateChangePicture;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_PICTURES_BEGIN:\n      return Object.assign({}, state, {\n        picturesArr: [],\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: true\n      });\n\n    case CHANGE_PICTURES_SUCCESS:\n      return Object.assign({}, state, {\n        picturesArr: _toConsumableArray(action.payload),\n        hasError: false,\n        error: '',\n        message: '',\n        status: '',\n        path: '',\n        loading: false\n      });\n\n    case CHANGE_PICTURES_ERROR:\n      return Object.assign({}, state, {\n        picturesArr: [],\n        hasError: true,\n        error: action.error,\n        message: action.message,\n        status: action.status,\n        path: action.path,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport { addPictureReducer, removePictureReducer, fetchPictureReducer, changePictureReducer };","map":{"version":3,"sources":["G:\\WORKSPACE\\Project\\Besocial\\Besocial\\Client\\src\\store\\reducers\\pictureReducer.js"],"names":["ADD_PICTURE_SUCCESS","ADD_PICTURE_BEGIN","ADD_PICTURE_ERROR","REMOVE_PICTURE_SUCCESS","REMOVE_PICTURE_BEGIN","REMOVE_PICTURE_ERROR","FETCH_PICTURE_SUCCESS","FETCH_PICTURE_BEGIN","FETCH_PICTURE_ERROR","CHANGE_PICTURES_SUCCESS","CHANGE_PICTURES_BEGIN","CHANGE_PICTURES_ERROR","UPDATE_PICTURES","initialStateAddPicture","hasError","error","message","status","path","loading","addPictureReducer","state","action","type","Object","assign","payload","initialStateRemovePicture","removePictureReducer","initialStateFetchPicture","picturesArr","fetchPictureReducer","initialStateChangePicture","changePictureReducer"],"mappings":"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","sourcesContent":["import {\n    ADD_PICTURE_SUCCESS, ADD_PICTURE_BEGIN, ADD_PICTURE_ERROR,\n    REMOVE_PICTURE_SUCCESS, REMOVE_PICTURE_BEGIN, REMOVE_PICTURE_ERROR,\n    FETCH_PICTURE_SUCCESS, FETCH_PICTURE_BEGIN, FETCH_PICTURE_ERROR,\n    CHANGE_PICTURES_SUCCESS, CHANGE_PICTURES_BEGIN, CHANGE_PICTURES_ERROR, UPDATE_PICTURES,\n} from '../actions/actionTypes';\n\n// addPictureReducer\nconst initialStateAddPicture = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction addPictureReducer(state = initialStateAddPicture, action) {\n    switch (action.type) {\n        case ADD_PICTURE_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case ADD_PICTURE_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case ADD_PICTURE_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// removePictureReducer\nconst initialStateRemovePicture = {\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction removePictureReducer(state = initialStateRemovePicture, action) {\n    switch (action.type) {\n        case REMOVE_PICTURE_BEGIN:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case REMOVE_PICTURE_SUCCESS:\n            return Object.assign({}, state, {\n                hasError: false,\n                error: '',\n                message: action.payload.message,\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case REMOVE_PICTURE_ERROR:\n            return Object.assign({}, state, {\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// fetchPictureArrReducer\nconst initialStateFetchPicture = {\n    picturesArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction fetchPictureReducer(state = initialStateFetchPicture, action) {\n    switch (action.type) {\n        case FETCH_PICTURE_BEGIN:\n            return Object.assign({}, state, {\n                picturesArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case FETCH_PICTURE_SUCCESS:\n            return Object.assign({}, state, {\n                picturesArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case FETCH_PICTURE_ERROR:\n            return Object.assign({}, state, {\n                picturesArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        case UPDATE_PICTURES:\n            return Object.assign({}, state, {\n                picturesArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\n// changePictureReducer\nconst initialStateChangePicture = {\n    picturesArr: [],\n    hasError: false,\n    error: '',\n    message: '',\n    status: '',\n    path: '',\n    loading: false,\n}\n\nfunction changePictureReducer(state = initialStateChangePicture, action) {\n    switch (action.type) {\n        case CHANGE_PICTURES_BEGIN:\n            return Object.assign({}, state, {\n                picturesArr: [],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: true,\n            })\n        case CHANGE_PICTURES_SUCCESS:\n            return Object.assign({}, state, {\n                picturesArr: [...action.payload],\n                hasError: false,\n                error: '',\n                message: '',\n                status: '',\n                path: '',\n                loading: false,\n            })\n        case CHANGE_PICTURES_ERROR:\n            return Object.assign({}, state, {\n                picturesArr: [],\n                hasError: true,\n                error: action.error,\n                message: action.message,\n                status: action.status,\n                path: action.path,\n                loading: false,\n            })\n        default:\n            return state\n    }\n}\n\nexport {\n    addPictureReducer, removePictureReducer, fetchPictureReducer, changePictureReducer\n}"]},"metadata":{},"sourceType":"module"}