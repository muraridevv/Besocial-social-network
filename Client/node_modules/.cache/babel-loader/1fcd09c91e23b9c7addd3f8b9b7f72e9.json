{"ast":null,"code":"import _objectWithoutProperties from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\src\\\\components\\\\auth\\\\RegisterPage.js\";\nimport React, { Component, Fragment } from 'react';\nimport '../../styles/FormPages.css';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\nimport default_background_image from '../../assets/images/default-background-image.jpg';\nimport { connect } from 'react-redux';\nimport { registerAction, redirectAction } from '../../store/actions/authActions';\n\nvar RegisterPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterPage, _Component);\n\n  function RegisterPage(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterPage).call(this, props));\n\n    _this.handleBlur = function (field) {\n      return function (event) {\n        _this.setState({\n          touched: _objectSpread({}, _this.state.touched, _defineProperty({}, field, true))\n        });\n      };\n    };\n\n    _this.validate = function (username, email, firstName, lastName, password, confirmPassword, address, city) {\n      var emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n      var firstLastNameRegex = /^[A-Z]([a-zA-Z]+)?$/;\n      var testEmail = emailRegex.test(email);\n      var testFirstName = firstLastNameRegex.test(firstName);\n      var testLastName = firstLastNameRegex.test(lastName);\n      return {\n        username: username.length < 4 || username.length > 16,\n        email: email.length === 0 || !testEmail,\n        firstName: firstName.length === 0 || !testFirstName,\n        lastName: lastName.length === 0 || !testLastName,\n        password: password.length < 4 || password.length > 16,\n        confirmPassword: confirmPassword.length === 0 || confirmPassword !== password,\n        address: address.length === 0,\n        city: city.length === 0\n      };\n    };\n\n    _this.state = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      firstName: '',\n      lastName: '',\n      address: '',\n      city: '',\n      profilePicUrl: placeholder_user_image,\n      backgroundImageUrl: default_background_image,\n      touched: {\n        username: false,\n        email: false,\n        password: false,\n        confirmPassword: false,\n        firstName: false,\n        lastName: false,\n        address: false,\n        city: false\n      }\n    };\n    _this.onChangeHandler = _this.onChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmitHandler = _this.onSubmitHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RegisterPage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.registerError.hasError && prevProps.registerError !== this.props.registerError) {\n        toast.error(React.createElement(ToastComponent.errorToast, {\n          text: this.props.registerError.message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else if (this.props.registerSuccess) {\n        this.props.redirect();\n        toast.success(React.createElement(ToastComponent.successToast, {\n          text: this.props.registerMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n        this.props.history.push('/login');\n      }\n    }\n  }, {\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"onSubmitHandler\",\n    value: function onSubmitHandler(event) {\n      event.preventDefault();\n\n      if (!this.canBeSubmitted()) {\n        return;\n      }\n\n      var _this$state = this.state,\n          touched = _this$state.touched,\n          otherProps = _objectWithoutProperties(_this$state, [\"touched\"]);\n\n      this.props.register(otherProps);\n    }\n  }, {\n    key: \"canBeSubmitted\",\n    value: function canBeSubmitted() {\n      var _this$state2 = this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword,\n          address = _this$state2.address,\n          city = _this$state2.city;\n      var errors = this.validate(username, email, firstName, lastName, password, confirmPassword, address, city);\n      var isDisabled = Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n      return !isDisabled;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          username = _this$state3.username,\n          email = _this$state3.email,\n          firstName = _this$state3.firstName,\n          lastName = _this$state3.lastName,\n          password = _this$state3.password,\n          confirmPassword = _this$state3.confirmPassword,\n          address = _this$state3.address,\n          city = _this$state3.city;\n      var errors = this.validate(username, email, firstName, lastName, password, confirmPassword, address, city);\n      var isEnabled = !Object.keys(errors).some(function (x) {\n        return errors[x];\n      });\n\n      var shouldMarkError = function shouldMarkError(field) {\n        var hasError = errors[field];\n        var shouldShow = _this2.state.touched[field];\n        return hasError ? shouldShow : false;\n      };\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container register-form-content-section pb-4 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center font-weight-bold mt-4\",\n        style: {\n          'margin': '1rem auto',\n          'paddingTop': '2rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"div\", {\n        className: \"hr-styles\",\n        style: {\n          'width': '70%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"Register-form-container\",\n        onSubmit: this.onSubmitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"left-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control \" + (shouldMarkError('username') ? \"error\" : \"\"),\n        id: \"username\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('username'),\n        \"aria-describedby\": \"usernameHelp\",\n        placeholder: \"Enter username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), shouldMarkError('username') && React.createElement(\"small\", {\n        id: \"usernameHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \" \", !this.state.username ? 'Username is required!' : 'Username should be at least 4 and maximum 16 characters long!')), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"firstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control \" + (shouldMarkError('firstName') ? \"error\" : \"\"),\n        id: \"firstName\",\n        name: \"firstName\",\n        value: this.state.firstName,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('firstName'),\n        \"aria-describedby\": \"firstNameHelp\",\n        placeholder: \"Enter first name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), shouldMarkError('firstName') && React.createElement(\"small\", {\n        id: \"firstNameHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, !this.state.firstName ? 'First Name is required!' : 'First Name must start with a capital letter and contain only letters!')), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control \" + (shouldMarkError('address') ? \"error\" : \"\"),\n        id: \"address\",\n        name: \"address\",\n        value: this.state.address,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('address'),\n        \"aria-describedby\": \"addressHelp\",\n        placeholder: \"Enter address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), shouldMarkError('address') && React.createElement(\"small\", {\n        id: \"addressHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, !this.state.address ? 'Address is required!' : '')), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control \" + (shouldMarkError('password') ? \"error\" : \"\"),\n        id: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('password'),\n        \"aria-describedby\": \"passwordHelp\",\n        placeholder: \"Enter password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), shouldMarkError('password') && React.createElement(\"small\", {\n        id: \"passwordHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, !this.state.password ? 'Password is required!' : 'Password should be at least 4 and maximum 16 characters long!'))), React.createElement(\"section\", {\n        className: \"right-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Email Address\"), React.createElement(\"input\", {\n        type: \"email\",\n        className: \"form-control \" + (shouldMarkError('email') ? \"error\" : \"\"),\n        id: \"email\",\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('email'),\n        \"aria-describedby\": \"emailHelp\",\n        placeholder: \"Enter email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), shouldMarkError('email') && React.createElement(\"small\", {\n        id: \"emailHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, !this.state.email ? 'Email is required!' : 'Invalid e-mail address!')), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"lastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control \" + (shouldMarkError('lastName') ? \"error\" : \"\"),\n        id: \"lastName\",\n        name: \"lastName\",\n        value: this.state.lastName,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('lastName'),\n        \"aria-describedby\": \"lastNameHelp\",\n        placeholder: \"Enter last name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), shouldMarkError('lastName') && React.createElement(\"small\", {\n        id: \"lastNameHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, !this.state.lastName ? 'Last Name is required!' : 'Last Name must start with a capital letter and contain only letters!')), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control \" + (shouldMarkError('city') ? \"error\" : \"\"),\n        id: \"city\",\n        name: \"city\",\n        value: this.state.city,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('city'),\n        \"aria-describedby\": \"cityHelp\",\n        placeholder: \"Enter city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), shouldMarkError('city') && React.createElement(\"small\", {\n        id: \"cityHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, !this.state.city ? 'City is required!' : '')), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"confirmPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control \" + (shouldMarkError('confirmPassword') ? \"error\" : \"\"),\n        id: \"confirmPassword\",\n        name: \"confirmPassword\",\n        value: this.state.confirmPassword,\n        onChange: this.onChangeHandler,\n        onBlur: this.handleBlur('confirmPassword'),\n        \"aria-describedby\": \"confirmPasswordHelp\",\n        placeholder: \"Confirm your password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), shouldMarkError('confirmPassword') && React.createElement(\"small\", {\n        id: \"confirmPasswordHelp\",\n        className: \"form-text alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Passwords do not match!\")))), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: !isEnabled,\n        type: \"submit\",\n        className: \"btn App-button-primary btn-lg m-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Register\"))))));\n    }\n  }]);\n\n  return RegisterPage;\n}(Component);\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    registerSuccess: state.register.success,\n    registerMessage: state.register.message,\n    registerError: state.registerError\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    register: function register(userData) {\n      return dispatch(registerAction(userData));\n    },\n    redirect: function redirect() {\n      return dispatch(redirectAction());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);","map":{"version":3,"sources":["G:\\WORKSPACE\\Project\\Besocial\\Besocial\\Client\\src\\components\\auth\\RegisterPage.js"],"names":["React","Component","Fragment","toast","ToastComponent","placeholder_user_image","default_background_image","connect","registerAction","redirectAction","RegisterPage","props","handleBlur","field","event","setState","touched","state","validate","username","email","firstName","lastName","password","confirmPassword","address","city","emailRegex","firstLastNameRegex","testEmail","test","testFirstName","testLastName","length","profilePicUrl","backgroundImageUrl","onChangeHandler","bind","onSubmitHandler","prevProps","prevState","registerError","hasError","error","message","position","POSITION","TOP_RIGHT","registerSuccess","redirect","success","registerMessage","history","push","target","name","value","preventDefault","canBeSubmitted","otherProps","register","errors","isDisabled","Object","keys","some","x","isEnabled","shouldMarkError","shouldShow","mapStateToProps","mapDispatchToProps","dispatch","userData"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport '../../styles/FormPages.css'\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport placeholder_user_image from '../../assets/images/placeholder.png';\nimport default_background_image from '../../assets/images/default-background-image.jpg';\nimport { connect } from 'react-redux';\nimport { registerAction, redirectAction } from '../../store/actions/authActions'\n\nclass RegisterPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            firstName: '',\n            lastName: '',\n            address: '',\n            city: '',\n            profilePicUrl: placeholder_user_image,\n            backgroundImageUrl: default_background_image,\n            touched: {\n                username: false,\n                email: false,\n                password: false,\n                confirmPassword: false,\n                firstName: false,\n                lastName: false,\n                address: false,\n                city: false,\n            }\n        };\n\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if (this.props.registerError.hasError && prevProps.registerError !== this.props.registerError) {\n            toast.error(<ToastComponent.errorToast text={this.props.registerError.message} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (this.props.registerSuccess) {\n            this.props.redirect();\n\n            toast.success(<ToastComponent.successToast text={this.props.registerMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n\n            this.props.history.push('/login');\n        }\n    }\n\n    onChangeHandler(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    onSubmitHandler(event) {\n        event.preventDefault();\n\n        if (!this.canBeSubmitted()) {\n            return;\n        }\n\n        const { touched, ...otherProps } = this.state;\n        this.props.register(otherProps)\n    }\n\n    canBeSubmitted() {\n        const { username, email, firstName, lastName, password, confirmPassword, address, city } = this.state;\n        const errors = this.validate(username, email, firstName, lastName, password, confirmPassword, address, city);\n        const isDisabled = Object.keys(errors).some(x => errors[x])\n        return !isDisabled;\n    }\n\n    handleBlur = (field) => (event) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n\n    }\n\n    validate = (username, email, firstName, lastName, password, confirmPassword, address, city) => {\n        const emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n        const firstLastNameRegex = /^[A-Z]([a-zA-Z]+)?$/;\n        const testEmail = emailRegex.test(email)\n        const testFirstName = firstLastNameRegex.test(firstName)\n        const testLastName = firstLastNameRegex.test(lastName)\n        return {\n            username: username.length < 4 || username.length > 16,\n            email: email.length === 0 || !testEmail,\n            firstName: firstName.length === 0 || !testFirstName,\n            lastName: lastName.length === 0 || !testLastName,\n            password: password.length < 4 || password.length > 16,\n            confirmPassword: confirmPassword.length === 0 || confirmPassword !== password,\n            address: address.length === 0,\n            city: city.length === 0,\n        }\n    }\n\n    render() {\n        const { username, email, firstName, lastName, password, confirmPassword, address, city } = this.state;\n        const errors = this.validate(username, email, firstName, lastName, password, confirmPassword, address, city);\n        const isEnabled = !Object.keys(errors).some(x => errors[x])\n\n        const shouldMarkError = (field) => {\n            const hasError = errors[field];\n            const shouldShow = this.state.touched[field];\n            return hasError ? shouldShow : false;\n        }\n\n        return (\n            <Fragment>\n                <section className=\"pt-3\">\n                    <div className=\"container register-form-content-section pb-4 \">\n                        <h1 className=\"text-center font-weight-bold mt-4\" style={{ 'margin': '1rem auto', 'paddingTop': '2rem' }}>Register</h1>\n                        <div className=\"hr-styles\" style={{ 'width': '70%' }}></div>\n\n                        <form className=\"Register-form-container\" onSubmit={this.onSubmitHandler}>\n\n                            <div className=\"section-container\">\n                                <section className=\"left-section\">\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"username\" >Username</label>\n                                        <input\n                                            type=\"text\"\n                                            className={\"form-control \" + (shouldMarkError('username') ? \"error\" : \"\")}\n                                            id=\"username\"\n                                            name=\"username\"\n                                            value={this.state.username}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('username')}\n                                            aria-describedby=\"usernameHelp\"\n                                            placeholder=\"Enter username\"\n                                        />\n                                        {shouldMarkError('username') && <small id=\"usernameHelp\" className=\"form-text alert alert-danger\"> {(!this.state.username ? 'Username is required!' : 'Username should be at least 4 and maximum 16 characters long!')}</small>}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"firstName\" >First Name</label>\n                                        <input\n                                            type=\"text\"\n                                            className={\"form-control \" + (shouldMarkError('firstName') ? \"error\" : \"\")}\n                                            id=\"firstName\"\n                                            name=\"firstName\"\n                                            value={this.state.firstName}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('firstName')}\n                                            aria-describedby=\"firstNameHelp\"\n                                            placeholder=\"Enter first name\"\n                                        />\n                                        {shouldMarkError('firstName') && <small id=\"firstNameHelp\" className=\"form-text alert alert-danger\">{(!this.state.firstName ? 'First Name is required!' : 'First Name must start with a capital letter and contain only letters!')}</small>}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"address\" >Address</label>\n                                        <input\n                                            type=\"text\"\n                                            className={\"form-control \" + (shouldMarkError('address') ? \"error\" : \"\")}\n                                            id=\"address\"\n                                            name=\"address\"\n                                            value={this.state.address}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('address')}\n                                            aria-describedby=\"addressHelp\"\n                                            placeholder=\"Enter address\"\n                                        />\n                                        {shouldMarkError('address') && <small id=\"addressHelp\" className=\"form-text alert alert-danger\">{(!this.state.address ? 'Address is required!' : '')}</small>}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"password\" >Password</label>\n                                        <input\n                                            type=\"password\"\n                                            className={\"form-control \" + (shouldMarkError('password') ? \"error\" : \"\")}\n                                            id=\"password\"\n                                            name=\"password\"\n                                            value={this.state.password}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('password')}\n                                            aria-describedby=\"passwordHelp\"\n                                            placeholder=\"Enter password\"\n                                        />\n                                        {shouldMarkError('password') && <small id=\"passwordHelp\" className=\"form-text alert alert-danger\">{(!this.state.password ? 'Password is required!' : 'Password should be at least 4 and maximum 16 characters long!')}</small>}\n                                    </div>\n                                </section>\n\n                                <section className=\"right-section\">\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"email\" >Email Address</label>\n                                        <input\n                                            type=\"email\"\n                                            className={\"form-control \" + (shouldMarkError('email') ? \"error\" : \"\")}\n                                            id=\"email\"\n                                            name=\"email\"\n                                            value={this.state.email}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('email')}\n                                            aria-describedby=\"emailHelp\"\n                                            placeholder=\"Enter email\"\n\n                                        />\n                                        {shouldMarkError('email') && <small id=\"emailHelp\" className=\"form-text alert alert-danger\">{(!this.state.email ? 'Email is required!' : 'Invalid e-mail address!')}</small>}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"lastName\" >Last Name</label>\n                                        <input\n                                            type=\"text\"\n                                            className={\"form-control \" + (shouldMarkError('lastName') ? \"error\" : \"\")}\n                                            id=\"lastName\"\n                                            name=\"lastName\"\n                                            value={this.state.lastName}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('lastName')}\n                                            aria-describedby=\"lastNameHelp\"\n                                            placeholder=\"Enter last name\"\n                                        />\n                                        {shouldMarkError('lastName') && <small id=\"lastNameHelp\" className=\"form-text alert alert-danger\">{(!this.state.lastName ? 'Last Name is required!' : 'Last Name must start with a capital letter and contain only letters!')}</small>}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"city\" >City</label>\n                                        <input\n                                            type=\"text\"\n                                            className={\"form-control \" + (shouldMarkError('city') ? \"error\" : \"\")}\n                                            id=\"city\"\n                                            name=\"city\"\n                                            value={this.state.city}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('city')}\n                                            aria-describedby=\"cityHelp\"\n                                            placeholder=\"Enter city\"\n                                        />\n                                        {shouldMarkError('city') && <small id=\"cityHelp\" className=\"form-text alert alert-danger\">{(!this.state.city ? 'City is required!' : '')}</small>}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"confirmPassword\" >Confirm Password</label>\n                                        <input\n                                            type=\"password\"\n                                            className={\"form-control \" + (shouldMarkError('confirmPassword') ? \"error\" : \"\")}\n                                            id=\"confirmPassword\"\n                                            name=\"confirmPassword\"\n                                            value={this.state.confirmPassword}\n                                            onChange={this.onChangeHandler}\n                                            onBlur={this.handleBlur('confirmPassword')}\n                                            aria-describedby=\"confirmPasswordHelp\"\n                                            placeholder=\"Confirm your password\"\n                                        />\n                                        {shouldMarkError('confirmPassword') && <small id=\"confirmPasswordHelp\" className=\"form-text alert alert-danger\">Passwords do not match!</small>}\n                                    </div>\n                                </section>\n                            </div>\n\n                            <div className=\"text-center\">\n                                <button disabled={!isEnabled} type=\"submit\" className=\"btn App-button-primary btn-lg m-3\">Register</button>\n                            </div>\n                        </form>\n                    </div>\n\n                </section>\n            </Fragment>\n        )\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        registerSuccess: state.register.success,\n        registerMessage: state.register.message,\n        registerError: state.registerError\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        register: (userData) =>\n            dispatch(registerAction(userData)),\n        redirect: () => dispatch(redirectAction())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);\n"]},"metadata":{},"sourceType":"module"}