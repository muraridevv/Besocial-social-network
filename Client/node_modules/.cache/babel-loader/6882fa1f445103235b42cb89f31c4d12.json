{"ast":null,"code":"import _defineProperty from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"G:\\\\WORKSPACE\\\\Project\\\\Besocial\\\\Besocial\\\\Client\\\\src\\\\components\\\\home\\\\NavBar.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport MessageNavBarRow from './MessageNavbarRow';\nimport './css/MessageNavbarRow.css';\nimport './css/Navbar.css';\nimport { connect } from 'react-redux';\nimport { fetchAllUnreadMessagesAction, triggerMessageLoadAction } from '../../store/actions/messageActions';\nimport { searchResultsAction } from '../../store/actions/userActions';\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navbar).call(this, props));\n\n    _this.getAllFriendMessages = function () {\n      if (_this.state.showDropdown === 'show-dropdown') {\n        _this.changeMessaboxVisibility();\n\n        return;\n      }\n\n      _this.props.loadAllUnreadMessages();\n\n      _this.setState({\n        showDropdown: 'show-dropdown'\n      });\n    };\n\n    _this.triggerMessageLoad = function (id, firstName, lastName, profilePicUrl, event) {\n      _this.changeMessaboxVisibility();\n\n      var userData = {\n        id: id,\n        firstName: firstName,\n        lastName: lastName,\n        profilePicUrl: profilePicUrl\n      };\n\n      _this.props.triggerMessageLoad(userData);\n    };\n\n    _this.handleBlur = function () {\n      return function (event) {\n        _this.setState({\n          showDropdown: ''\n        });\n      };\n    };\n\n    _this.changeMessaboxVisibility = function () {\n      if (_this.state.showDropdown === '') {\n        _this.setState({\n          showDropdown: 'show-dropdown'\n        });\n      } else {\n        _this.setState({\n          showDropdown: ''\n        });\n      }\n    };\n\n    _this.getUnreadMessagesCount = function () {\n      var count = _this.props.allUnreadMessages.reduce(function (a, b) {\n        return a + b.count;\n      }, 0);\n\n      if (count > 0) {\n        _this.setState({\n          unreadMessages: count,\n          displayMessageCount: true\n        });\n      } else {\n        _this.setState({\n          unreadMessages: 0,\n          displayMessageCount: false\n        });\n      }\n    };\n\n    _this.state = {\n      search: '',\n      showDropdown: '',\n      unreadMessages: 0,\n      displayMessageCount: true,\n      allUnreadMessages: []\n    };\n    _this.searchFriend = _this.searchFriend.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeHandler = _this.onChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getAllFriendMessages = _this.getAllFriendMessages.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.triggerMessageLoad = _this.triggerMessageLoad.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeMessaboxVisibility = _this.changeMessaboxVisibility.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var loading = this.props.fetchAllUnreadMessages.loading;\n\n      if (!loading && !this.props.fetchAllUnreadMessages.hasError && this.props.fetchAllUnreadMessages !== prevProps.fetchAllUnreadMessages) {\n        this.setState({\n          displayMessageCount: true\n        }, function () {\n          _this2.getUnreadMessagesCount();\n        });\n      }\n\n      var errorMessage = this.getErrorMessage(prevProps);\n      var successMessage = this.getSuccessMessage(prevProps);\n\n      if (errorMessage) {\n        toast.error(React.createElement(ToastComponent.errorToast, {\n          text: errorMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else if (successMessage) {\n        toast.success(React.createElement(ToastComponent.successToast, {\n          text: successMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    }\n  }, {\n    key: \"getSuccessMessage\",\n    value: function getSuccessMessage(prevProps) {\n      if (!this.props.fetchAllUnreadMessages.hasError && this.props.fetchAllUnreadMessages.message && this.props.fetchAllUnreadMessages !== prevProps.fetchAllUnreadMessages) {\n        return this.props.fetchAllLogs.message;\n      } else if (!this.props.searchResultsData.hasError && this.props.searchResultsData.message && this.props.searchResultsData !== prevProps.searchResultsData) {\n        return this.props.searchResultsData.message;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getErrorMessage\",\n    value: function getErrorMessage(prevProps) {\n      if (this.props.fetchAllUnreadMessages.hasError && prevProps.fetchAllUnreadMessages.error !== this.props.fetchAllUnreadMessages.error) {\n        return this.props.fetchAllUnreadMessages.message || 'Server Error';\n      } else if (this.props.searchResultsData.hasError && prevProps.searchResultsData.error !== this.props.searchResultsData.error) {\n        return this.props.searchResultsData.message || 'Server Error';\n      }\n\n      return null;\n    }\n  }, {\n    key: \"searchFriend\",\n    value: function searchFriend(event) {\n      event.preventDefault();\n      var loggedInUserId = this.props.loggedInUserData.id;\n      var search = this.state.search;\n      this.props.searchResult(loggedInUserId, search);\n      return this.props.history.push({\n        pathname: \"/home/users/search\"\n      });\n    }\n  }, {\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var isAdmin = userService.isAdmin();\n      var isRoot = userService.isRoot();\n      var userId = userService.getUserId();\n      var _this$props = this.props,\n          loggedIn = _this$props.loggedIn,\n          onLogout = _this$props.onLogout;\n      var showDropdown = this.state.showDropdown;\n      var pathname = this.props.location.pathname !== \"/\";\n      var isFrendRequestsArrEmpty = this.props.friendRequestsArr.length > 0;\n      var messages = React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdown-messagebox-header\",\n        onClick: this.changeHeight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"dropdown-chat-title\",\n        style: {\n          color: ' #333'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"There are no messages for you!\")));\n\n      if (this.props.allUnreadMessages.length > 0) {\n        messages = React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"messagebox-navbar-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, this.props.allUnreadMessages.map(function (message) {\n          return React.createElement(MessageNavBarRow, Object.assign({\n            key: message.id\n          }, message, {\n            triggerMessageLoad: _this3.triggerMessageLoad,\n            className: \"dropdown-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }));\n        })));\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"main-nav-toggle\",\n        id: \"main-nav-toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"header\", {\n        className: \"site-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"navbar-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"nav-searchbar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"site-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/\",\n        className: \"nav-link \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Social Network\")), loggedIn && React.createElement(\"form\", {\n        className: \"form-inline my-2 my-lg-0\",\n        onSubmit: this.searchFriend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control mr-sm-2\",\n        type: \"search\",\n        placeholder: \"Search\",\n        \"aria-label\": \"Search\",\n        name: \"search\",\n        id: \"search\",\n        value: this.state.search,\n        onChange: this.onChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn button-navbar-outline my-2 my-sm-0\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Search\"))), React.createElement(\"label\", {\n        id: \"toggle\",\n        htmlFor: \"main-nav-toggle\",\n        style: {\n          'marginBottom': '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Menu\")), React.createElement(\"nav\", {\n        className: \"nav-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"nav-ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, loggedIn && React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/home/profile/\".concat(userId),\n        className: \"nav-link  fas fa-user tooltipCustom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \" \", userService.getUsername(), React.createElement(\"span\", {\n        className: \"tooltiptextCustom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Profile\"))), loggedIn && React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/home/comments/\".concat(userId),\n        className: \"nav-link \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Home\")), loggedIn && React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/home/findFriends/\".concat(userId),\n        className: \"nav-link \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Find friends!\")), loggedIn && React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/home/friendRequests/\".concat(userId),\n        className: \"nav-link tooltipCustom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-user-friends\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), isFrendRequestsArrEmpty && React.createElement(\"span\", {\n        id: \"icon-badge-container-friend-requests\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, this.props.friendRequestsArr.length), React.createElement(\"span\", {\n        className: \"tooltiptextCustom\",\n        id: \"friend-requests-tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Friend Requests\"))), loggedIn && pathname && React.createElement(\"li\", {\n        className: \"nav-item\",\n        id: \"onclick-wrapper\",\n        onClick: this.getAllFriendMessages,\n        onBlur: this.handleBlur('onclick-wrapper'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon-badge-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"fas fa-envelope tooltipCustom nav-link\",\n        to: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"tooltiptextCustom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Messages\")), this.state.displayMessageCount && React.createElement(\"span\", {\n        id: \"icon-badge-container-messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, this.state.unreadMessages)), React.createElement(\"div\", {\n        className: \"dropdown-container \".concat(showDropdown),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdown-messagebox-header\",\n        onClick: this.changeHeight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdown-messagebox-chat-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-envelope\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        className: \"dropdown-chat-title\",\n        style: {\n          color: ' #333'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Messages\")), messages)), loggedIn && (isRoot || isAdmin) && React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/home/logs/\".concat(userId),\n        className: \"nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \" Logs\")), loggedIn && React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"#\",\n        className: \"nav-link \",\n        onClick: onLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Logout\")), !loggedIn && React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/login\",\n        className: \"nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Login\")), !loggedIn && React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/register\",\n        className: \"nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Register\"))))))));\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    timeLineUserData: state.timeLineUserData,\n    loggedInUserData: state.loggedInUserData,\n    fetchAllUnreadMessages: state.fetchAllUnreadMessages,\n    allUnreadMessages: state.fetchAllUnreadMessages.allUnreadMessages,\n    searchResultsData: state.searchResults,\n    friendRequestsArr: state.findFriends.userWaitingForAcceptingRequest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    triggerMessageLoad: function triggerMessageLoad(userData) {\n      dispatch(triggerMessageLoadAction(userData));\n    },\n    searchResult: function searchResult(loggedInUserId, search) {\n      dispatch(searchResultsAction(loggedInUserId, search));\n    },\n    loadAllUnreadMessages: function loadAllUnreadMessages() {\n      dispatch(fetchAllUnreadMessagesAction());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","map":{"version":3,"sources":["G:\\WORKSPACE\\Project\\Besocial\\Besocial\\Client\\src\\components\\home\\NavBar.jsx"],"names":["React","Component","Fragment","NavLink","userService","toast","ToastComponent","MessageNavBarRow","connect","fetchAllUnreadMessagesAction","triggerMessageLoadAction","searchResultsAction","Navbar","props","getAllFriendMessages","state","showDropdown","changeMessaboxVisibility","loadAllUnreadMessages","setState","triggerMessageLoad","id","firstName","lastName","profilePicUrl","event","userData","handleBlur","getUnreadMessagesCount","count","allUnreadMessages","reduce","a","b","unreadMessages","displayMessageCount","search","searchFriend","bind","onChangeHandler","prevProps","prevState","loading","fetchAllUnreadMessages","hasError","errorMessage","getErrorMessage","successMessage","getSuccessMessage","error","position","POSITION","TOP_RIGHT","success","message","fetchAllLogs","searchResultsData","preventDefault","loggedInUserId","loggedInUserData","searchResult","history","push","pathname","target","name","value","isAdmin","isRoot","userId","getUserId","loggedIn","onLogout","location","isFrendRequestsArrEmpty","friendRequestsArr","length","messages","changeHeight","color","map","getUsername","mapStateToProps","timeLineUserData","searchResults","findFriends","userWaitingForAcceptingRequest","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { userService } from '../../infrastructure';\nimport { toast } from 'react-toastify';\nimport { ToastComponent } from '../common';\nimport MessageNavBarRow from './MessageNavbarRow';\nimport './css/MessageNavbarRow.css';\nimport './css/Navbar.css';\n\nimport { connect } from 'react-redux';\nimport { fetchAllUnreadMessagesAction, triggerMessageLoadAction } from '../../store/actions/messageActions';\nimport { searchResultsAction } from '../../store/actions/userActions';\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            search: '',\n            showDropdown: '',\n            unreadMessages: 0,\n            displayMessageCount: true,\n            allUnreadMessages: [],\n        }\n\n        this.searchFriend = this.searchFriend.bind(this);\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.getAllFriendMessages = this.getAllFriendMessages.bind(this);\n        this.triggerMessageLoad = this.triggerMessageLoad.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.changeMessaboxVisibility = this.changeMessaboxVisibility.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const loading = this.props.fetchAllUnreadMessages.loading;\n\n        if (!loading && !this.props.fetchAllUnreadMessages.hasError && this.props.fetchAllUnreadMessages !== prevProps.fetchAllUnreadMessages) {\n            this.setState({\n                displayMessageCount: true,\n            }, () => {\n                this.getUnreadMessagesCount();\n            })\n        }\n\n        const errorMessage = this.getErrorMessage(prevProps);\n        const successMessage = this.getSuccessMessage(prevProps)\n\n        if (errorMessage) {\n            toast.error(<ToastComponent.errorToast text={errorMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        } else if (successMessage) {\n            toast.success(<ToastComponent.successToast text={successMessage} />, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    getSuccessMessage(prevProps) {\n        if (!this.props.fetchAllUnreadMessages.hasError && this.props.fetchAllUnreadMessages.message && this.props.fetchAllUnreadMessages !== prevProps.fetchAllUnreadMessages) {\n            return this.props.fetchAllLogs.message;\n        }\n        else if (!this.props.searchResultsData.hasError && this.props.searchResultsData.message && this.props.searchResultsData !== prevProps.searchResultsData) {\n            return this.props.searchResultsData.message;\n        }\n\n        return null;\n    }\n\n    getErrorMessage(prevProps) {\n        if (this.props.fetchAllUnreadMessages.hasError && prevProps.fetchAllUnreadMessages.error !== this.props.fetchAllUnreadMessages.error) {\n            return this.props.fetchAllUnreadMessages.message || 'Server Error';\n        }\n        else if (this.props.searchResultsData.hasError && prevProps.searchResultsData.error !== this.props.searchResultsData.error) {\n            return this.props.searchResultsData.message || 'Server Error';\n        }\n\n        return null;\n    }\n\n    searchFriend(event) {\n        event.preventDefault();\n\n        const loggedInUserId = this.props.loggedInUserData.id;\n        const search = this.state.search;\n\n        this.props.searchResult(loggedInUserId, search);\n        return this.props.history.push({ pathname: \"/home/users/search\" });\n    }\n\n    onChangeHandler(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    getAllFriendMessages = () => {\n        if (this.state.showDropdown === 'show-dropdown') {\n            this.changeMessaboxVisibility();\n            return;\n        }\n\n        this.props.loadAllUnreadMessages();\n        this.setState({ showDropdown: 'show-dropdown' })\n    }\n\n    triggerMessageLoad = (id, firstName, lastName, profilePicUrl, event) => {\n        this.changeMessaboxVisibility();\n        const userData = { id, firstName, lastName, profilePicUrl }\n        this.props.triggerMessageLoad(userData);\n    }\n\n    handleBlur = () => (event) => {\n        this.setState({\n            showDropdown: '',\n        });\n    }\n\n    changeMessaboxVisibility = () => {\n        if (this.state.showDropdown === '') {\n            this.setState({ showDropdown: 'show-dropdown' })\n        } else {\n            this.setState({ showDropdown: '' })\n        }\n    }\n\n    getUnreadMessagesCount = () => {\n        let count = this.props.allUnreadMessages.reduce((a, b) => {\n            return a + b.count;\n        }, 0)\n      \n        if (count > 0) {\n            this.setState({\n                unreadMessages: count,\n                displayMessageCount: true,\n            })\n        } else {\n            this.setState({\n                unreadMessages: 0,\n                displayMessageCount: false,\n\n            })\n        }\n    }\n\n    render() {\n        const isAdmin = userService.isAdmin();\n        const isRoot = userService.isRoot();\n        const userId = userService.getUserId();\n\n        const { loggedIn, onLogout } = this.props;\n        const showDropdown = this.state.showDropdown;\n        let pathname = this.props.location.pathname !== \"/\";\n\n        const isFrendRequestsArrEmpty = this.props.friendRequestsArr.length > 0\n\n        let messages = (\n            <Fragment>\n                <div className=\"dropdown-messagebox-header\" onClick={this.changeHeight}>\n                    <h5 className=\"dropdown-chat-title\" style={{ color: ' #333' }}>\n                        There are no messages for you!\n                    </h5>\n                </div>\n            </Fragment>\n        )\n\n        if (this.props.allUnreadMessages.length > 0) {\n            messages = (\n                <Fragment>\n                    <div className=\"messagebox-navbar-container\">\n                        {this.props.allUnreadMessages.map(message =>\n                            <MessageNavBarRow\n                                key={message.id}\n                                {...message}\n                                triggerMessageLoad={this.triggerMessageLoad}\n                                className=\"dropdown-item\"\n                            />\n                        )}\n                    </div>\n                </Fragment>\n            )\n        }\n\n        return (\n            <Fragment >\n                <input type=\"checkbox\" name=\"main-nav-toggle\" id=\"main-nav-toggle\" />\n                <header className=\"site-header\">\n                    <section className=\"navbar-section\">\n                        <div className=\"navbar-wrapper\">\n                            <div className=\"nav-searchbar-container\">\n                                <div className=\"site-logo\">\n                                    <NavLink to=\"/\" className=\"nav-link \" >Social Network</NavLink>\n                                </div>\n                                {loggedIn && <form className=\"form-inline my-2 my-lg-0\" onSubmit={this.searchFriend}>\n                                    <input\n                                        className=\"form-control mr-sm-2\"\n                                        type=\"search\"\n                                        placeholder=\"Search\"\n                                        aria-label=\"Search\"\n                                        name=\"search\"\n                                        id=\"search\"\n                                        value={this.state.search}\n                                        onChange={this.onChangeHandler}\n                                    />\n\n                                    <button className=\"btn button-navbar-outline my-2 my-sm-0\" type=\"submit\">Search</button>\n                                </form>}\n                            </div>\n\n                            <label id=\"toggle\" htmlFor=\"main-nav-toggle\" style={{ 'marginBottom': '0' }}><span>Menu</span></label>\n\n                            <nav className=\"nav-main\">\n                                <ul className=\"nav-ul\">\n                                    {loggedIn && <li className=\"nav-item\"><NavLink exact to={`/home/profile/${userId}`} className=\"nav-link  fas fa-user tooltipCustom\"  > {userService.getUsername()}<span className=\"tooltiptextCustom\">Profile</span></NavLink></li>}\n\n                                    {loggedIn && <li className=\"nav-item\"><NavLink exact to={`/home/comments/${userId}`} className=\"nav-link \">Home</NavLink></li>}\n                                    {loggedIn && <li className=\"nav-item\"><NavLink exact to={`/home/findFriends/${userId}`} className=\"nav-link \" >Find friends!</NavLink></li>}\n\n\n                                    {loggedIn &&\n                                        <li className=\"nav-item\">\n                                            <NavLink exact to={`/home/friendRequests/${userId}`} className=\"nav-link tooltipCustom\">\n                                                <i className=\"fas fa-user-friends\"></i>\n                                                {isFrendRequestsArrEmpty && <span id=\"icon-badge-container-friend-requests\">{this.props.friendRequestsArr.length}</span>}\n                                                {/* <i id=\"icon-badge-container-friend-requests\" data-count=\"2\" className=\"fas fa-user-friends\"></i> */}\n                                                <span className=\"tooltiptextCustom\" id=\"friend-requests-tooltip\">Friend Requests</span>\n                                            </NavLink>\n                                        </li>}\n\n                                    {loggedIn && pathname &&\n                                        <li className=\"nav-item\"\n                                            id=\"onclick-wrapper\"\n                                            onClick={this.getAllFriendMessages}\n                                            onBlur={this.handleBlur('onclick-wrapper')}\n                                        >\n                                            <div className=\"icon-badge-wrapper\">\n                                                <NavLink className=\"fas fa-envelope tooltipCustom nav-link\" to=\"#\">\n                                                    <span className=\"tooltiptextCustom\">Messages</span>\n                                                </NavLink>\n                                                {this.state.displayMessageCount && <span id=\"icon-badge-container-messages\">{this.state.unreadMessages}</span>}\n                                            </div>\n\n                                            <div className={`dropdown-container ${showDropdown}`}>\n                                                <div className=\"dropdown-messagebox-header\" onClick={this.changeHeight}>\n                                                    <div className=\"dropdown-messagebox-chat-icon\">\n                                                        <i className=\"fas fa-envelope\"></i>\n                                                    </div>\n                                                    <h4 className=\"dropdown-chat-title\" style={{ color: ' #333' }}>\n                                                        Messages\n                                                    </h4>\n                                                </div>\n                                                {messages}\n                                            </div>\n                                        </li>\n                                    }\n\n                                    {(loggedIn && (isRoot || isAdmin)) && <li className=\"nav-item\"><NavLink exact to={`/home/logs/${userId}`} className=\"nav-link\"> Logs</NavLink></li>}\n                                    {loggedIn && <li className=\"nav-item\"><NavLink exact to=\"#\" className=\"nav-link \" onClick={onLogout} >Logout</NavLink></li>}\n                                    {!loggedIn && <li className=\"nav-item\"><NavLink exact to=\"/login\" className=\"nav-link\" >Login</NavLink></li>}\n                                    {!loggedIn && <li className=\"nav-item\"><NavLink exact to=\"/register\" className=\"nav-link\" >Register</NavLink></li>}\n                                </ul>\n                            </nav>\n                        </div>\n                    </section>\n                </header>\n            </Fragment >\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        timeLineUserData: state.timeLineUserData,\n        loggedInUserData: state.loggedInUserData,\n\n        fetchAllUnreadMessages: state.fetchAllUnreadMessages,\n        allUnreadMessages: state.fetchAllUnreadMessages.allUnreadMessages,\n\n        searchResultsData: state.searchResults,\n\n        friendRequestsArr: state.findFriends.userWaitingForAcceptingRequest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        triggerMessageLoad: (userData) => { dispatch(triggerMessageLoadAction(userData)) },\n        searchResult: (loggedInUserId, search) => { dispatch(searchResultsAction(loggedInUserId, search)) },\n        loadAllUnreadMessages: () => { dispatch(fetchAllUnreadMessagesAction()) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n\n\n"]},"metadata":{},"sourceType":"module"}